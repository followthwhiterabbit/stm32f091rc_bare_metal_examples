
11_systick_delay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013fc  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  080014bc  080014bc  000114bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001504  08001504  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001504  08001504  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001504  08001504  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001504  08001504  00011504  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001508  08001508  00011508  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  0800150c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001568  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001568  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020084  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000f62  00000000  00000000  000200c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000005cd  00000000  00000000  00021029  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000180  00000000  00000000  000215f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000104  00000000  00000000  00021778  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001fe5  00000000  00000000  0002187c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001cbc  00000000  00000000  00023861  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00068251  00000000  00000000  0002551d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b94  00000000  00000000  0008d770  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000051  00000000  00000000  0008e304  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000005c 	.word	0x2000005c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080014a4 	.word	0x080014a4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000060 	.word	0x20000060
 8000104:	080014a4 	.word	0x080014a4

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			; (mov r8, r8)

08000234 <main>:




int main(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0

	// enable clock access to GPIOA

	RCC->AHBENR |= GPIOA_ENABLE;
 8000238:	4b15      	ldr	r3, [pc, #84]	; (8000290 <main+0x5c>)
 800023a:	695a      	ldr	r2, [r3, #20]
 800023c:	4b14      	ldr	r3, [pc, #80]	; (8000290 <main+0x5c>)
 800023e:	2180      	movs	r1, #128	; 0x80
 8000240:	0289      	lsls	r1, r1, #10
 8000242:	430a      	orrs	r2, r1
 8000244:	615a      	str	r2, [r3, #20]


	GPIOA->MODER |= (1U << 10);
 8000246:	2390      	movs	r3, #144	; 0x90
 8000248:	05db      	lsls	r3, r3, #23
 800024a:	681a      	ldr	r2, [r3, #0]
 800024c:	2390      	movs	r3, #144	; 0x90
 800024e:	05db      	lsls	r3, r3, #23
 8000250:	2180      	movs	r1, #128	; 0x80
 8000252:	00c9      	lsls	r1, r1, #3
 8000254:	430a      	orrs	r2, r1
 8000256:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1U << 11);
 8000258:	2390      	movs	r3, #144	; 0x90
 800025a:	05db      	lsls	r3, r3, #23
 800025c:	681a      	ldr	r2, [r3, #0]
 800025e:	2390      	movs	r3, #144	; 0x90
 8000260:	05db      	lsls	r3, r3, #23
 8000262:	490c      	ldr	r1, [pc, #48]	; (8000294 <main+0x60>)
 8000264:	400a      	ands	r2, r1
 8000266:	601a      	str	r2, [r3, #0]


	uart2_tx_init();
 8000268:	f000 f8e8 	bl	800043c <uart2_tx_init>


while(1)
{

	printf("A second passed !!\n\r");
 800026c:	4b0a      	ldr	r3, [pc, #40]	; (8000298 <main+0x64>)
 800026e:	0018      	movs	r0, r3
 8000270:	f000 fa72 	bl	8000758 <iprintf>
	GPIOA->ODR ^= LED_PIN;
 8000274:	2390      	movs	r3, #144	; 0x90
 8000276:	05db      	lsls	r3, r3, #23
 8000278:	695a      	ldr	r2, [r3, #20]
 800027a:	2390      	movs	r3, #144	; 0x90
 800027c:	05db      	lsls	r3, r3, #23
 800027e:	2120      	movs	r1, #32
 8000280:	404a      	eors	r2, r1
 8000282:	615a      	str	r2, [r3, #20]
	systickDelayMs(1000000);
 8000284:	4b05      	ldr	r3, [pc, #20]	; (800029c <main+0x68>)
 8000286:	0018      	movs	r0, r3
 8000288:	f000 f8a6 	bl	80003d8 <systickDelayMs>
	printf("A second passed !!\n\r");
 800028c:	e7ee      	b.n	800026c <main+0x38>
 800028e:	46c0      	nop			; (mov r8, r8)
 8000290:	40021000 	.word	0x40021000
 8000294:	fffff7ff 	.word	0xfffff7ff
 8000298:	080014bc 	.word	0x080014bc
 800029c:	000f4240 	.word	0x000f4240

080002a0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b086      	sub	sp, #24
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	60f8      	str	r0, [r7, #12]
 80002a8:	60b9      	str	r1, [r7, #8]
 80002aa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ac:	2300      	movs	r3, #0
 80002ae:	617b      	str	r3, [r7, #20]
 80002b0:	e00a      	b.n	80002c8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002b2:	e000      	b.n	80002b6 <_read+0x16>
 80002b4:	bf00      	nop
 80002b6:	0001      	movs	r1, r0
 80002b8:	68bb      	ldr	r3, [r7, #8]
 80002ba:	1c5a      	adds	r2, r3, #1
 80002bc:	60ba      	str	r2, [r7, #8]
 80002be:	b2ca      	uxtb	r2, r1
 80002c0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002c2:	697b      	ldr	r3, [r7, #20]
 80002c4:	3301      	adds	r3, #1
 80002c6:	617b      	str	r3, [r7, #20]
 80002c8:	697a      	ldr	r2, [r7, #20]
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	429a      	cmp	r2, r3
 80002ce:	dbf0      	blt.n	80002b2 <_read+0x12>
  }

  return len;
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	0018      	movs	r0, r3
 80002d4:	46bd      	mov	sp, r7
 80002d6:	b006      	add	sp, #24
 80002d8:	bd80      	pop	{r7, pc}

080002da <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002da:	b580      	push	{r7, lr}
 80002dc:	b086      	sub	sp, #24
 80002de:	af00      	add	r7, sp, #0
 80002e0:	60f8      	str	r0, [r7, #12]
 80002e2:	60b9      	str	r1, [r7, #8]
 80002e4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e6:	2300      	movs	r3, #0
 80002e8:	617b      	str	r3, [r7, #20]
 80002ea:	e009      	b.n	8000300 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80002ec:	68bb      	ldr	r3, [r7, #8]
 80002ee:	1c5a      	adds	r2, r3, #1
 80002f0:	60ba      	str	r2, [r7, #8]
 80002f2:	781b      	ldrb	r3, [r3, #0]
 80002f4:	0018      	movs	r0, r3
 80002f6:	f000 f893 	bl	8000420 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fa:	697b      	ldr	r3, [r7, #20]
 80002fc:	3301      	adds	r3, #1
 80002fe:	617b      	str	r3, [r7, #20]
 8000300:	697a      	ldr	r2, [r7, #20]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	429a      	cmp	r2, r3
 8000306:	dbf1      	blt.n	80002ec <_write+0x12>
  }
  return len;
 8000308:	687b      	ldr	r3, [r7, #4]
}
 800030a:	0018      	movs	r0, r3
 800030c:	46bd      	mov	sp, r7
 800030e:	b006      	add	sp, #24
 8000310:	bd80      	pop	{r7, pc}

08000312 <_close>:

int _close(int file)
{
 8000312:	b580      	push	{r7, lr}
 8000314:	b082      	sub	sp, #8
 8000316:	af00      	add	r7, sp, #0
 8000318:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800031a:	2301      	movs	r3, #1
 800031c:	425b      	negs	r3, r3
}
 800031e:	0018      	movs	r0, r3
 8000320:	46bd      	mov	sp, r7
 8000322:	b002      	add	sp, #8
 8000324:	bd80      	pop	{r7, pc}

08000326 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000326:	b580      	push	{r7, lr}
 8000328:	b082      	sub	sp, #8
 800032a:	af00      	add	r7, sp, #0
 800032c:	6078      	str	r0, [r7, #4]
 800032e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000330:	683b      	ldr	r3, [r7, #0]
 8000332:	2280      	movs	r2, #128	; 0x80
 8000334:	0192      	lsls	r2, r2, #6
 8000336:	605a      	str	r2, [r3, #4]
  return 0;
 8000338:	2300      	movs	r3, #0
}
 800033a:	0018      	movs	r0, r3
 800033c:	46bd      	mov	sp, r7
 800033e:	b002      	add	sp, #8
 8000340:	bd80      	pop	{r7, pc}

08000342 <_isatty>:

int _isatty(int file)
{
 8000342:	b580      	push	{r7, lr}
 8000344:	b082      	sub	sp, #8
 8000346:	af00      	add	r7, sp, #0
 8000348:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800034a:	2301      	movs	r3, #1
}
 800034c:	0018      	movs	r0, r3
 800034e:	46bd      	mov	sp, r7
 8000350:	b002      	add	sp, #8
 8000352:	bd80      	pop	{r7, pc}

08000354 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000354:	b580      	push	{r7, lr}
 8000356:	b084      	sub	sp, #16
 8000358:	af00      	add	r7, sp, #0
 800035a:	60f8      	str	r0, [r7, #12]
 800035c:	60b9      	str	r1, [r7, #8]
 800035e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000360:	2300      	movs	r3, #0
}
 8000362:	0018      	movs	r0, r3
 8000364:	46bd      	mov	sp, r7
 8000366:	b004      	add	sp, #16
 8000368:	bd80      	pop	{r7, pc}
	...

0800036c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800036c:	b580      	push	{r7, lr}
 800036e:	b086      	sub	sp, #24
 8000370:	af00      	add	r7, sp, #0
 8000372:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000374:	4a14      	ldr	r2, [pc, #80]	; (80003c8 <_sbrk+0x5c>)
 8000376:	4b15      	ldr	r3, [pc, #84]	; (80003cc <_sbrk+0x60>)
 8000378:	1ad3      	subs	r3, r2, r3
 800037a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800037c:	697b      	ldr	r3, [r7, #20]
 800037e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000380:	4b13      	ldr	r3, [pc, #76]	; (80003d0 <_sbrk+0x64>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	2b00      	cmp	r3, #0
 8000386:	d102      	bne.n	800038e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000388:	4b11      	ldr	r3, [pc, #68]	; (80003d0 <_sbrk+0x64>)
 800038a:	4a12      	ldr	r2, [pc, #72]	; (80003d4 <_sbrk+0x68>)
 800038c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800038e:	4b10      	ldr	r3, [pc, #64]	; (80003d0 <_sbrk+0x64>)
 8000390:	681a      	ldr	r2, [r3, #0]
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	18d3      	adds	r3, r2, r3
 8000396:	693a      	ldr	r2, [r7, #16]
 8000398:	429a      	cmp	r2, r3
 800039a:	d207      	bcs.n	80003ac <_sbrk+0x40>
  {
    errno = ENOMEM;
 800039c:	f000 fa8e 	bl	80008bc <__errno>
 80003a0:	0003      	movs	r3, r0
 80003a2:	220c      	movs	r2, #12
 80003a4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003a6:	2301      	movs	r3, #1
 80003a8:	425b      	negs	r3, r3
 80003aa:	e009      	b.n	80003c0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003ac:	4b08      	ldr	r3, [pc, #32]	; (80003d0 <_sbrk+0x64>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003b2:	4b07      	ldr	r3, [pc, #28]	; (80003d0 <_sbrk+0x64>)
 80003b4:	681a      	ldr	r2, [r3, #0]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	18d2      	adds	r2, r2, r3
 80003ba:	4b05      	ldr	r3, [pc, #20]	; (80003d0 <_sbrk+0x64>)
 80003bc:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80003be:	68fb      	ldr	r3, [r7, #12]
}
 80003c0:	0018      	movs	r0, r3
 80003c2:	46bd      	mov	sp, r7
 80003c4:	b006      	add	sp, #24
 80003c6:	bd80      	pop	{r7, pc}
 80003c8:	20008000 	.word	0x20008000
 80003cc:	00000400 	.word	0x00000400
 80003d0:	20000078 	.word	0x20000078
 80003d4:	200001c8 	.word	0x200001c8

080003d8 <systickDelayMs>:




void systickDelayMs(int delay)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b084      	sub	sp, #16
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
/* Configure the SysTick */
/* Reload with number of clocks per millisecond */

	SysTick->LOAD = SYSTICK_LOAD_VAL;
 80003e0:	4b0e      	ldr	r3, [pc, #56]	; (800041c <systickDelayMs+0x44>)
 80003e2:	22fa      	movs	r2, #250	; 0xfa
 80003e4:	0152      	lsls	r2, r2, #5
 80003e6:	605a      	str	r2, [r3, #4]

/* Clear Systick current value register */
	SysTick->VAL = 0;
 80003e8:	4b0c      	ldr	r3, [pc, #48]	; (800041c <systickDelayMs+0x44>)
 80003ea:	2200      	movs	r2, #0
 80003ec:	609a      	str	r2, [r3, #8]
/* Enable Systick and select internal Clock Source */
	SysTick->CTRL  = CTRL_ENABLE | CTRL_CLKSRC;
 80003ee:	4b0b      	ldr	r3, [pc, #44]	; (800041c <systickDelayMs+0x44>)
 80003f0:	2205      	movs	r2, #5
 80003f2:	601a      	str	r2, [r3, #0]

	for(int i = 0; i < delay; i++)
 80003f4:	2300      	movs	r3, #0
 80003f6:	60fb      	str	r3, [r7, #12]
 80003f8:	e005      	b.n	8000406 <systickDelayMs+0x2e>
	{
		/* Wait until the COUNTFLAG is set */
		while((SysTick->CTRL & CTRL_COUNTFLAG == 0)){}
 80003fa:	46c0      	nop			; (mov r8, r8)
 80003fc:	4b07      	ldr	r3, [pc, #28]	; (800041c <systickDelayMs+0x44>)
 80003fe:	681b      	ldr	r3, [r3, #0]
	for(int i = 0; i < delay; i++)
 8000400:	68fb      	ldr	r3, [r7, #12]
 8000402:	3301      	adds	r3, #1
 8000404:	60fb      	str	r3, [r7, #12]
 8000406:	68fa      	ldr	r2, [r7, #12]
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	429a      	cmp	r2, r3
 800040c:	dbf5      	blt.n	80003fa <systickDelayMs+0x22>
		// 1 millisecond has been passed, with the for loop we delay this function

	}


	SysTick->CTRL = 0;
 800040e:	4b03      	ldr	r3, [pc, #12]	; (800041c <systickDelayMs+0x44>)
 8000410:	2200      	movs	r2, #0
 8000412:	601a      	str	r2, [r3, #0]



}
 8000414:	46c0      	nop			; (mov r8, r8)
 8000416:	46bd      	mov	sp, r7
 8000418:	b004      	add	sp, #16
 800041a:	bd80      	pop	{r7, pc}
 800041c:	e000e010 	.word	0xe000e010

08000420 <__io_putchar>:


/* Funtion Prototypes */

int __io_putchar(int ch)
{
 8000420:	b580      	push	{r7, lr}
 8000422:	b082      	sub	sp, #8
 8000424:	af00      	add	r7, sp, #0
 8000426:	6078      	str	r0, [r7, #4]
	uart_write(ch);
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	0018      	movs	r0, r3
 800042c:	f000 f866 	bl	80004fc <uart_write>
	return ch;
 8000430:	687b      	ldr	r3, [r7, #4]
}
 8000432:	0018      	movs	r0, r3
 8000434:	46bd      	mov	sp, r7
 8000436:	b002      	add	sp, #8
 8000438:	bd80      	pop	{r7, pc}
	...

0800043c <uart2_tx_init>:
}



void uart2_tx_init(void)
{
 800043c:	b580      	push	{r7, lr}
 800043e:	af00      	add	r7, sp, #0
	/* configure uart gpio pin */
	// Enable clock access to gpioa
	RCC->AHBENR |= GPIOA_ENABLE;
 8000440:	4b28      	ldr	r3, [pc, #160]	; (80004e4 <uart2_tx_init+0xa8>)
 8000442:	695a      	ldr	r2, [r3, #20]
 8000444:	4b27      	ldr	r3, [pc, #156]	; (80004e4 <uart2_tx_init+0xa8>)
 8000446:	2180      	movs	r1, #128	; 0x80
 8000448:	0289      	lsls	r1, r1, #10
 800044a:	430a      	orrs	r2, r1
 800044c:	615a      	str	r2, [r3, #20]


	/* Set PA2 mode to alternate function mode */
	GPIOA->MODER |= (1U<<5);
 800044e:	2390      	movs	r3, #144	; 0x90
 8000450:	05db      	lsls	r3, r3, #23
 8000452:	681a      	ldr	r2, [r3, #0]
 8000454:	2390      	movs	r3, #144	; 0x90
 8000456:	05db      	lsls	r3, r3, #23
 8000458:	2120      	movs	r1, #32
 800045a:	430a      	orrs	r2, r1
 800045c:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1U<<6);
 800045e:	2390      	movs	r3, #144	; 0x90
 8000460:	05db      	lsls	r3, r3, #23
 8000462:	681a      	ldr	r2, [r3, #0]
 8000464:	2390      	movs	r3, #144	; 0x90
 8000466:	05db      	lsls	r3, r3, #23
 8000468:	2140      	movs	r1, #64	; 0x40
 800046a:	438a      	bics	r2, r1
 800046c:	601a      	str	r2, [r3, #0]

	/* Set PA2 alternate function type to UART_TX (AF01) */
	GPIOA->AFR[0] |= (1<<8);
 800046e:	2390      	movs	r3, #144	; 0x90
 8000470:	05db      	lsls	r3, r3, #23
 8000472:	6a1a      	ldr	r2, [r3, #32]
 8000474:	2390      	movs	r3, #144	; 0x90
 8000476:	05db      	lsls	r3, r3, #23
 8000478:	2180      	movs	r1, #128	; 0x80
 800047a:	0049      	lsls	r1, r1, #1
 800047c:	430a      	orrs	r2, r1
 800047e:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<9);
 8000480:	2390      	movs	r3, #144	; 0x90
 8000482:	05db      	lsls	r3, r3, #23
 8000484:	6a1a      	ldr	r2, [r3, #32]
 8000486:	2390      	movs	r3, #144	; 0x90
 8000488:	05db      	lsls	r3, r3, #23
 800048a:	4917      	ldr	r1, [pc, #92]	; (80004e8 <uart2_tx_init+0xac>)
 800048c:	400a      	ands	r2, r1
 800048e:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<10);
 8000490:	2390      	movs	r3, #144	; 0x90
 8000492:	05db      	lsls	r3, r3, #23
 8000494:	6a1a      	ldr	r2, [r3, #32]
 8000496:	2390      	movs	r3, #144	; 0x90
 8000498:	05db      	lsls	r3, r3, #23
 800049a:	4914      	ldr	r1, [pc, #80]	; (80004ec <uart2_tx_init+0xb0>)
 800049c:	400a      	ands	r2, r1
 800049e:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1<<11);
 80004a0:	2390      	movs	r3, #144	; 0x90
 80004a2:	05db      	lsls	r3, r3, #23
 80004a4:	6a1a      	ldr	r2, [r3, #32]
 80004a6:	2390      	movs	r3, #144	; 0x90
 80004a8:	05db      	lsls	r3, r3, #23
 80004aa:	4911      	ldr	r1, [pc, #68]	; (80004f0 <uart2_tx_init+0xb4>)
 80004ac:	400a      	ands	r2, r1
 80004ae:	621a      	str	r2, [r3, #32]


	/* configure uart module */
	/* enable clock access to uart2 */
	RCC->APB1ENR |= UART2EN;
 80004b0:	4b0c      	ldr	r3, [pc, #48]	; (80004e4 <uart2_tx_init+0xa8>)
 80004b2:	69da      	ldr	r2, [r3, #28]
 80004b4:	4b0b      	ldr	r3, [pc, #44]	; (80004e4 <uart2_tx_init+0xa8>)
 80004b6:	2180      	movs	r1, #128	; 0x80
 80004b8:	0289      	lsls	r1, r1, #10
 80004ba:	430a      	orrs	r2, r1
 80004bc:	61da      	str	r2, [r3, #28]

	/* configure baud rate */
	uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 80004be:	2396      	movs	r3, #150	; 0x96
 80004c0:	021b      	lsls	r3, r3, #8
 80004c2:	490c      	ldr	r1, [pc, #48]	; (80004f4 <uart2_tx_init+0xb8>)
 80004c4:	480c      	ldr	r0, [pc, #48]	; (80004f8 <uart2_tx_init+0xbc>)
 80004c6:	001a      	movs	r2, r3
 80004c8:	f000 f830 	bl	800052c <uart_set_baudrate>

	/* configure the transfer direction */
	USART2->CR1 = CR1_TE;
 80004cc:	4b0a      	ldr	r3, [pc, #40]	; (80004f8 <uart2_tx_init+0xbc>)
 80004ce:	2208      	movs	r2, #8
 80004d0:	601a      	str	r2, [r3, #0]

	/* enable uart module */
	USART2->CR1 |= CR1_UE_ENABLE;
 80004d2:	4b09      	ldr	r3, [pc, #36]	; (80004f8 <uart2_tx_init+0xbc>)
 80004d4:	681a      	ldr	r2, [r3, #0]
 80004d6:	4b08      	ldr	r3, [pc, #32]	; (80004f8 <uart2_tx_init+0xbc>)
 80004d8:	2101      	movs	r1, #1
 80004da:	430a      	orrs	r2, r1
 80004dc:	601a      	str	r2, [r3, #0]


}
 80004de:	46c0      	nop			; (mov r8, r8)
 80004e0:	46bd      	mov	sp, r7
 80004e2:	bd80      	pop	{r7, pc}
 80004e4:	40021000 	.word	0x40021000
 80004e8:	fffffdff 	.word	0xfffffdff
 80004ec:	fffffbff 	.word	0xfffffbff
 80004f0:	fffff7ff 	.word	0xfffff7ff
 80004f4:	007a1200 	.word	0x007a1200
 80004f8:	40004400 	.word	0x40004400

080004fc <uart_write>:




void uart_write(unsigned int ch)
{
 80004fc:	b580      	push	{r7, lr}
 80004fe:	b082      	sub	sp, #8
 8000500:	af00      	add	r7, sp, #0
 8000502:	6078      	str	r0, [r7, #4]
	/* make sure transmit data register is empty */
	while(!(USART2->ISR & ISR_TXE))
 8000504:	46c0      	nop			; (mov r8, r8)
 8000506:	4b08      	ldr	r3, [pc, #32]	; (8000528 <uart_write+0x2c>)
 8000508:	69db      	ldr	r3, [r3, #28]
 800050a:	2280      	movs	r2, #128	; 0x80
 800050c:	4013      	ands	r3, r2
 800050e:	d0fa      	beq.n	8000506 <uart_write+0xa>

	} // we wait here until transmission is completed

	/* Write to transmit data register */

	USART2->TDR = (ch & 0xFF);
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	b29b      	uxth	r3, r3
 8000514:	4a04      	ldr	r2, [pc, #16]	; (8000528 <uart_write+0x2c>)
 8000516:	21ff      	movs	r1, #255	; 0xff
 8000518:	400b      	ands	r3, r1
 800051a:	b29b      	uxth	r3, r3
 800051c:	8513      	strh	r3, [r2, #40]	; 0x28




}
 800051e:	46c0      	nop			; (mov r8, r8)
 8000520:	46bd      	mov	sp, r7
 8000522:	b002      	add	sp, #8
 8000524:	bd80      	pop	{r7, pc}
 8000526:	46c0      	nop			; (mov r8, r8)
 8000528:	40004400 	.word	0x40004400

0800052c <uart_set_baudrate>:




static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 800052c:	b580      	push	{r7, lr}
 800052e:	b084      	sub	sp, #16
 8000530:	af00      	add	r7, sp, #0
 8000532:	60f8      	str	r0, [r7, #12]
 8000534:	60b9      	str	r1, [r7, #8]
 8000536:	607a      	str	r2, [r7, #4]

USARTx->BRR = compute_uart_bd(PeriphClk, BaudRate);
 8000538:	687a      	ldr	r2, [r7, #4]
 800053a:	68bb      	ldr	r3, [r7, #8]
 800053c:	0011      	movs	r1, r2
 800053e:	0018      	movs	r0, r3
 8000540:	f000 f808 	bl	8000554 <compute_uart_bd>
 8000544:	0003      	movs	r3, r0
 8000546:	001a      	movs	r2, r3
 8000548:	68fb      	ldr	r3, [r7, #12]
 800054a:	60da      	str	r2, [r3, #12]

}
 800054c:	46c0      	nop			; (mov r8, r8)
 800054e:	46bd      	mov	sp, r7
 8000550:	b004      	add	sp, #16
 8000552:	bd80      	pop	{r7, pc}

08000554 <compute_uart_bd>:




static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 8000554:	b580      	push	{r7, lr}
 8000556:	b082      	sub	sp, #8
 8000558:	af00      	add	r7, sp, #0
 800055a:	6078      	str	r0, [r7, #4]
 800055c:	6039      	str	r1, [r7, #0]
			return ((PeriphClk + (BaudRate/2U)) /BaudRate);
 800055e:	683b      	ldr	r3, [r7, #0]
 8000560:	085a      	lsrs	r2, r3, #1
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	18d3      	adds	r3, r2, r3
 8000566:	6839      	ldr	r1, [r7, #0]
 8000568:	0018      	movs	r0, r3
 800056a:	f7ff fdd7 	bl	800011c <__udivsi3>
 800056e:	0003      	movs	r3, r0
 8000570:	b29b      	uxth	r3, r3


}
 8000572:	0018      	movs	r0, r3
 8000574:	46bd      	mov	sp, r7
 8000576:	b002      	add	sp, #8
 8000578:	bd80      	pop	{r7, pc}
	...

0800057c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800057c:	480d      	ldr	r0, [pc, #52]	; (80005b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800057e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000580:	e000      	b.n	8000584 <Reset_Handler+0x8>
 8000582:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000584:	480c      	ldr	r0, [pc, #48]	; (80005b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000586:	490d      	ldr	r1, [pc, #52]	; (80005bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000588:	4a0d      	ldr	r2, [pc, #52]	; (80005c0 <LoopForever+0xe>)
  movs r3, #0
 800058a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800058c:	e002      	b.n	8000594 <LoopCopyDataInit>

0800058e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800058e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000590:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000592:	3304      	adds	r3, #4

08000594 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000594:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000596:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000598:	d3f9      	bcc.n	800058e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800059a:	4a0a      	ldr	r2, [pc, #40]	; (80005c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800059c:	4c0a      	ldr	r4, [pc, #40]	; (80005c8 <LoopForever+0x16>)
  movs r3, #0
 800059e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005a0:	e001      	b.n	80005a6 <LoopFillZerobss>

080005a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005a4:	3204      	adds	r2, #4

080005a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005a8:	d3fb      	bcc.n	80005a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005aa:	f000 f98d 	bl	80008c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005ae:	f7ff fe41 	bl	8000234 <main>

080005b2 <LoopForever>:

LoopForever:
  b LoopForever
 80005b2:	e7fe      	b.n	80005b2 <LoopForever>
  ldr   r0, =_estack
 80005b4:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 80005b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005bc:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80005c0:	0800150c 	.word	0x0800150c
  ldr r2, =_sbss
 80005c4:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80005c8:	200001c8 	.word	0x200001c8

080005cc <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005cc:	e7fe      	b.n	80005cc <ADC_COMP_IRQHandler>
	...

080005d0 <std>:
 80005d0:	2300      	movs	r3, #0
 80005d2:	b510      	push	{r4, lr}
 80005d4:	0004      	movs	r4, r0
 80005d6:	6003      	str	r3, [r0, #0]
 80005d8:	6043      	str	r3, [r0, #4]
 80005da:	6083      	str	r3, [r0, #8]
 80005dc:	8181      	strh	r1, [r0, #12]
 80005de:	6643      	str	r3, [r0, #100]	; 0x64
 80005e0:	81c2      	strh	r2, [r0, #14]
 80005e2:	6103      	str	r3, [r0, #16]
 80005e4:	6143      	str	r3, [r0, #20]
 80005e6:	6183      	str	r3, [r0, #24]
 80005e8:	0019      	movs	r1, r3
 80005ea:	2208      	movs	r2, #8
 80005ec:	305c      	adds	r0, #92	; 0x5c
 80005ee:	f000 f90f 	bl	8000810 <memset>
 80005f2:	4b0b      	ldr	r3, [pc, #44]	; (8000620 <std+0x50>)
 80005f4:	6224      	str	r4, [r4, #32]
 80005f6:	6263      	str	r3, [r4, #36]	; 0x24
 80005f8:	4b0a      	ldr	r3, [pc, #40]	; (8000624 <std+0x54>)
 80005fa:	62a3      	str	r3, [r4, #40]	; 0x28
 80005fc:	4b0a      	ldr	r3, [pc, #40]	; (8000628 <std+0x58>)
 80005fe:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000600:	4b0a      	ldr	r3, [pc, #40]	; (800062c <std+0x5c>)
 8000602:	6323      	str	r3, [r4, #48]	; 0x30
 8000604:	4b0a      	ldr	r3, [pc, #40]	; (8000630 <std+0x60>)
 8000606:	429c      	cmp	r4, r3
 8000608:	d005      	beq.n	8000616 <std+0x46>
 800060a:	4b0a      	ldr	r3, [pc, #40]	; (8000634 <std+0x64>)
 800060c:	429c      	cmp	r4, r3
 800060e:	d002      	beq.n	8000616 <std+0x46>
 8000610:	4b09      	ldr	r3, [pc, #36]	; (8000638 <std+0x68>)
 8000612:	429c      	cmp	r4, r3
 8000614:	d103      	bne.n	800061e <std+0x4e>
 8000616:	0020      	movs	r0, r4
 8000618:	3058      	adds	r0, #88	; 0x58
 800061a:	f000 f979 	bl	8000910 <__retarget_lock_init_recursive>
 800061e:	bd10      	pop	{r4, pc}
 8000620:	08000779 	.word	0x08000779
 8000624:	080007a1 	.word	0x080007a1
 8000628:	080007d9 	.word	0x080007d9
 800062c:	08000805 	.word	0x08000805
 8000630:	2000007c 	.word	0x2000007c
 8000634:	200000e4 	.word	0x200000e4
 8000638:	2000014c 	.word	0x2000014c

0800063c <stdio_exit_handler>:
 800063c:	b510      	push	{r4, lr}
 800063e:	4a03      	ldr	r2, [pc, #12]	; (800064c <stdio_exit_handler+0x10>)
 8000640:	4903      	ldr	r1, [pc, #12]	; (8000650 <stdio_exit_handler+0x14>)
 8000642:	4804      	ldr	r0, [pc, #16]	; (8000654 <stdio_exit_handler+0x18>)
 8000644:	f000 f86c 	bl	8000720 <_fwalk_sglue>
 8000648:	bd10      	pop	{r4, pc}
 800064a:	46c0      	nop			; (mov r8, r8)
 800064c:	20000000 	.word	0x20000000
 8000650:	080011b1 	.word	0x080011b1
 8000654:	2000000c 	.word	0x2000000c

08000658 <cleanup_stdio>:
 8000658:	6841      	ldr	r1, [r0, #4]
 800065a:	4b0b      	ldr	r3, [pc, #44]	; (8000688 <cleanup_stdio+0x30>)
 800065c:	b510      	push	{r4, lr}
 800065e:	0004      	movs	r4, r0
 8000660:	4299      	cmp	r1, r3
 8000662:	d001      	beq.n	8000668 <cleanup_stdio+0x10>
 8000664:	f000 fda4 	bl	80011b0 <_fflush_r>
 8000668:	68a1      	ldr	r1, [r4, #8]
 800066a:	4b08      	ldr	r3, [pc, #32]	; (800068c <cleanup_stdio+0x34>)
 800066c:	4299      	cmp	r1, r3
 800066e:	d002      	beq.n	8000676 <cleanup_stdio+0x1e>
 8000670:	0020      	movs	r0, r4
 8000672:	f000 fd9d 	bl	80011b0 <_fflush_r>
 8000676:	68e1      	ldr	r1, [r4, #12]
 8000678:	4b05      	ldr	r3, [pc, #20]	; (8000690 <cleanup_stdio+0x38>)
 800067a:	4299      	cmp	r1, r3
 800067c:	d002      	beq.n	8000684 <cleanup_stdio+0x2c>
 800067e:	0020      	movs	r0, r4
 8000680:	f000 fd96 	bl	80011b0 <_fflush_r>
 8000684:	bd10      	pop	{r4, pc}
 8000686:	46c0      	nop			; (mov r8, r8)
 8000688:	2000007c 	.word	0x2000007c
 800068c:	200000e4 	.word	0x200000e4
 8000690:	2000014c 	.word	0x2000014c

08000694 <global_stdio_init.part.0>:
 8000694:	b510      	push	{r4, lr}
 8000696:	4b09      	ldr	r3, [pc, #36]	; (80006bc <global_stdio_init.part.0+0x28>)
 8000698:	4a09      	ldr	r2, [pc, #36]	; (80006c0 <global_stdio_init.part.0+0x2c>)
 800069a:	2104      	movs	r1, #4
 800069c:	601a      	str	r2, [r3, #0]
 800069e:	4809      	ldr	r0, [pc, #36]	; (80006c4 <global_stdio_init.part.0+0x30>)
 80006a0:	2200      	movs	r2, #0
 80006a2:	f7ff ff95 	bl	80005d0 <std>
 80006a6:	2201      	movs	r2, #1
 80006a8:	2109      	movs	r1, #9
 80006aa:	4807      	ldr	r0, [pc, #28]	; (80006c8 <global_stdio_init.part.0+0x34>)
 80006ac:	f7ff ff90 	bl	80005d0 <std>
 80006b0:	2202      	movs	r2, #2
 80006b2:	2112      	movs	r1, #18
 80006b4:	4805      	ldr	r0, [pc, #20]	; (80006cc <global_stdio_init.part.0+0x38>)
 80006b6:	f7ff ff8b 	bl	80005d0 <std>
 80006ba:	bd10      	pop	{r4, pc}
 80006bc:	200001b4 	.word	0x200001b4
 80006c0:	0800063d 	.word	0x0800063d
 80006c4:	2000007c 	.word	0x2000007c
 80006c8:	200000e4 	.word	0x200000e4
 80006cc:	2000014c 	.word	0x2000014c

080006d0 <__sfp_lock_acquire>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	4802      	ldr	r0, [pc, #8]	; (80006dc <__sfp_lock_acquire+0xc>)
 80006d4:	f000 f91d 	bl	8000912 <__retarget_lock_acquire_recursive>
 80006d8:	bd10      	pop	{r4, pc}
 80006da:	46c0      	nop			; (mov r8, r8)
 80006dc:	200001bd 	.word	0x200001bd

080006e0 <__sfp_lock_release>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	4802      	ldr	r0, [pc, #8]	; (80006ec <__sfp_lock_release+0xc>)
 80006e4:	f000 f916 	bl	8000914 <__retarget_lock_release_recursive>
 80006e8:	bd10      	pop	{r4, pc}
 80006ea:	46c0      	nop			; (mov r8, r8)
 80006ec:	200001bd 	.word	0x200001bd

080006f0 <__sinit>:
 80006f0:	b510      	push	{r4, lr}
 80006f2:	0004      	movs	r4, r0
 80006f4:	f7ff ffec 	bl	80006d0 <__sfp_lock_acquire>
 80006f8:	6a23      	ldr	r3, [r4, #32]
 80006fa:	2b00      	cmp	r3, #0
 80006fc:	d002      	beq.n	8000704 <__sinit+0x14>
 80006fe:	f7ff ffef 	bl	80006e0 <__sfp_lock_release>
 8000702:	bd10      	pop	{r4, pc}
 8000704:	4b04      	ldr	r3, [pc, #16]	; (8000718 <__sinit+0x28>)
 8000706:	6223      	str	r3, [r4, #32]
 8000708:	4b04      	ldr	r3, [pc, #16]	; (800071c <__sinit+0x2c>)
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	2b00      	cmp	r3, #0
 800070e:	d1f6      	bne.n	80006fe <__sinit+0xe>
 8000710:	f7ff ffc0 	bl	8000694 <global_stdio_init.part.0>
 8000714:	e7f3      	b.n	80006fe <__sinit+0xe>
 8000716:	46c0      	nop			; (mov r8, r8)
 8000718:	08000659 	.word	0x08000659
 800071c:	200001b4 	.word	0x200001b4

08000720 <_fwalk_sglue>:
 8000720:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000722:	0014      	movs	r4, r2
 8000724:	2600      	movs	r6, #0
 8000726:	9000      	str	r0, [sp, #0]
 8000728:	9101      	str	r1, [sp, #4]
 800072a:	68a5      	ldr	r5, [r4, #8]
 800072c:	6867      	ldr	r7, [r4, #4]
 800072e:	3f01      	subs	r7, #1
 8000730:	d504      	bpl.n	800073c <_fwalk_sglue+0x1c>
 8000732:	6824      	ldr	r4, [r4, #0]
 8000734:	2c00      	cmp	r4, #0
 8000736:	d1f8      	bne.n	800072a <_fwalk_sglue+0xa>
 8000738:	0030      	movs	r0, r6
 800073a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800073c:	89ab      	ldrh	r3, [r5, #12]
 800073e:	2b01      	cmp	r3, #1
 8000740:	d908      	bls.n	8000754 <_fwalk_sglue+0x34>
 8000742:	220e      	movs	r2, #14
 8000744:	5eab      	ldrsh	r3, [r5, r2]
 8000746:	3301      	adds	r3, #1
 8000748:	d004      	beq.n	8000754 <_fwalk_sglue+0x34>
 800074a:	0029      	movs	r1, r5
 800074c:	9800      	ldr	r0, [sp, #0]
 800074e:	9b01      	ldr	r3, [sp, #4]
 8000750:	4798      	blx	r3
 8000752:	4306      	orrs	r6, r0
 8000754:	3568      	adds	r5, #104	; 0x68
 8000756:	e7ea      	b.n	800072e <_fwalk_sglue+0xe>

08000758 <iprintf>:
 8000758:	b40f      	push	{r0, r1, r2, r3}
 800075a:	b507      	push	{r0, r1, r2, lr}
 800075c:	4905      	ldr	r1, [pc, #20]	; (8000774 <iprintf+0x1c>)
 800075e:	ab04      	add	r3, sp, #16
 8000760:	6808      	ldr	r0, [r1, #0]
 8000762:	cb04      	ldmia	r3!, {r2}
 8000764:	6881      	ldr	r1, [r0, #8]
 8000766:	9301      	str	r3, [sp, #4]
 8000768:	f000 f9fc 	bl	8000b64 <_vfiprintf_r>
 800076c:	b003      	add	sp, #12
 800076e:	bc08      	pop	{r3}
 8000770:	b004      	add	sp, #16
 8000772:	4718      	bx	r3
 8000774:	20000058 	.word	0x20000058

08000778 <__sread>:
 8000778:	b570      	push	{r4, r5, r6, lr}
 800077a:	000c      	movs	r4, r1
 800077c:	250e      	movs	r5, #14
 800077e:	5f49      	ldrsh	r1, [r1, r5]
 8000780:	f000 f874 	bl	800086c <_read_r>
 8000784:	2800      	cmp	r0, #0
 8000786:	db03      	blt.n	8000790 <__sread+0x18>
 8000788:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800078a:	181b      	adds	r3, r3, r0
 800078c:	6563      	str	r3, [r4, #84]	; 0x54
 800078e:	bd70      	pop	{r4, r5, r6, pc}
 8000790:	89a3      	ldrh	r3, [r4, #12]
 8000792:	4a02      	ldr	r2, [pc, #8]	; (800079c <__sread+0x24>)
 8000794:	4013      	ands	r3, r2
 8000796:	81a3      	strh	r3, [r4, #12]
 8000798:	e7f9      	b.n	800078e <__sread+0x16>
 800079a:	46c0      	nop			; (mov r8, r8)
 800079c:	ffffefff 	.word	0xffffefff

080007a0 <__swrite>:
 80007a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007a2:	001f      	movs	r7, r3
 80007a4:	898b      	ldrh	r3, [r1, #12]
 80007a6:	0005      	movs	r5, r0
 80007a8:	000c      	movs	r4, r1
 80007aa:	0016      	movs	r6, r2
 80007ac:	05db      	lsls	r3, r3, #23
 80007ae:	d505      	bpl.n	80007bc <__swrite+0x1c>
 80007b0:	230e      	movs	r3, #14
 80007b2:	5ec9      	ldrsh	r1, [r1, r3]
 80007b4:	2200      	movs	r2, #0
 80007b6:	2302      	movs	r3, #2
 80007b8:	f000 f844 	bl	8000844 <_lseek_r>
 80007bc:	89a3      	ldrh	r3, [r4, #12]
 80007be:	4a05      	ldr	r2, [pc, #20]	; (80007d4 <__swrite+0x34>)
 80007c0:	0028      	movs	r0, r5
 80007c2:	4013      	ands	r3, r2
 80007c4:	81a3      	strh	r3, [r4, #12]
 80007c6:	0032      	movs	r2, r6
 80007c8:	230e      	movs	r3, #14
 80007ca:	5ee1      	ldrsh	r1, [r4, r3]
 80007cc:	003b      	movs	r3, r7
 80007ce:	f000 f861 	bl	8000894 <_write_r>
 80007d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007d4:	ffffefff 	.word	0xffffefff

080007d8 <__sseek>:
 80007d8:	b570      	push	{r4, r5, r6, lr}
 80007da:	000c      	movs	r4, r1
 80007dc:	250e      	movs	r5, #14
 80007de:	5f49      	ldrsh	r1, [r1, r5]
 80007e0:	f000 f830 	bl	8000844 <_lseek_r>
 80007e4:	89a3      	ldrh	r3, [r4, #12]
 80007e6:	1c42      	adds	r2, r0, #1
 80007e8:	d103      	bne.n	80007f2 <__sseek+0x1a>
 80007ea:	4a05      	ldr	r2, [pc, #20]	; (8000800 <__sseek+0x28>)
 80007ec:	4013      	ands	r3, r2
 80007ee:	81a3      	strh	r3, [r4, #12]
 80007f0:	bd70      	pop	{r4, r5, r6, pc}
 80007f2:	2280      	movs	r2, #128	; 0x80
 80007f4:	0152      	lsls	r2, r2, #5
 80007f6:	4313      	orrs	r3, r2
 80007f8:	81a3      	strh	r3, [r4, #12]
 80007fa:	6560      	str	r0, [r4, #84]	; 0x54
 80007fc:	e7f8      	b.n	80007f0 <__sseek+0x18>
 80007fe:	46c0      	nop			; (mov r8, r8)
 8000800:	ffffefff 	.word	0xffffefff

08000804 <__sclose>:
 8000804:	b510      	push	{r4, lr}
 8000806:	230e      	movs	r3, #14
 8000808:	5ec9      	ldrsh	r1, [r1, r3]
 800080a:	f000 f809 	bl	8000820 <_close_r>
 800080e:	bd10      	pop	{r4, pc}

08000810 <memset>:
 8000810:	0003      	movs	r3, r0
 8000812:	1882      	adds	r2, r0, r2
 8000814:	4293      	cmp	r3, r2
 8000816:	d100      	bne.n	800081a <memset+0xa>
 8000818:	4770      	bx	lr
 800081a:	7019      	strb	r1, [r3, #0]
 800081c:	3301      	adds	r3, #1
 800081e:	e7f9      	b.n	8000814 <memset+0x4>

08000820 <_close_r>:
 8000820:	2300      	movs	r3, #0
 8000822:	b570      	push	{r4, r5, r6, lr}
 8000824:	4d06      	ldr	r5, [pc, #24]	; (8000840 <_close_r+0x20>)
 8000826:	0004      	movs	r4, r0
 8000828:	0008      	movs	r0, r1
 800082a:	602b      	str	r3, [r5, #0]
 800082c:	f7ff fd71 	bl	8000312 <_close>
 8000830:	1c43      	adds	r3, r0, #1
 8000832:	d103      	bne.n	800083c <_close_r+0x1c>
 8000834:	682b      	ldr	r3, [r5, #0]
 8000836:	2b00      	cmp	r3, #0
 8000838:	d000      	beq.n	800083c <_close_r+0x1c>
 800083a:	6023      	str	r3, [r4, #0]
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	46c0      	nop			; (mov r8, r8)
 8000840:	200001b8 	.word	0x200001b8

08000844 <_lseek_r>:
 8000844:	b570      	push	{r4, r5, r6, lr}
 8000846:	0004      	movs	r4, r0
 8000848:	0008      	movs	r0, r1
 800084a:	0011      	movs	r1, r2
 800084c:	001a      	movs	r2, r3
 800084e:	2300      	movs	r3, #0
 8000850:	4d05      	ldr	r5, [pc, #20]	; (8000868 <_lseek_r+0x24>)
 8000852:	602b      	str	r3, [r5, #0]
 8000854:	f7ff fd7e 	bl	8000354 <_lseek>
 8000858:	1c43      	adds	r3, r0, #1
 800085a:	d103      	bne.n	8000864 <_lseek_r+0x20>
 800085c:	682b      	ldr	r3, [r5, #0]
 800085e:	2b00      	cmp	r3, #0
 8000860:	d000      	beq.n	8000864 <_lseek_r+0x20>
 8000862:	6023      	str	r3, [r4, #0]
 8000864:	bd70      	pop	{r4, r5, r6, pc}
 8000866:	46c0      	nop			; (mov r8, r8)
 8000868:	200001b8 	.word	0x200001b8

0800086c <_read_r>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	0004      	movs	r4, r0
 8000870:	0008      	movs	r0, r1
 8000872:	0011      	movs	r1, r2
 8000874:	001a      	movs	r2, r3
 8000876:	2300      	movs	r3, #0
 8000878:	4d05      	ldr	r5, [pc, #20]	; (8000890 <_read_r+0x24>)
 800087a:	602b      	str	r3, [r5, #0]
 800087c:	f7ff fd10 	bl	80002a0 <_read>
 8000880:	1c43      	adds	r3, r0, #1
 8000882:	d103      	bne.n	800088c <_read_r+0x20>
 8000884:	682b      	ldr	r3, [r5, #0]
 8000886:	2b00      	cmp	r3, #0
 8000888:	d000      	beq.n	800088c <_read_r+0x20>
 800088a:	6023      	str	r3, [r4, #0]
 800088c:	bd70      	pop	{r4, r5, r6, pc}
 800088e:	46c0      	nop			; (mov r8, r8)
 8000890:	200001b8 	.word	0x200001b8

08000894 <_write_r>:
 8000894:	b570      	push	{r4, r5, r6, lr}
 8000896:	0004      	movs	r4, r0
 8000898:	0008      	movs	r0, r1
 800089a:	0011      	movs	r1, r2
 800089c:	001a      	movs	r2, r3
 800089e:	2300      	movs	r3, #0
 80008a0:	4d05      	ldr	r5, [pc, #20]	; (80008b8 <_write_r+0x24>)
 80008a2:	602b      	str	r3, [r5, #0]
 80008a4:	f7ff fd19 	bl	80002da <_write>
 80008a8:	1c43      	adds	r3, r0, #1
 80008aa:	d103      	bne.n	80008b4 <_write_r+0x20>
 80008ac:	682b      	ldr	r3, [r5, #0]
 80008ae:	2b00      	cmp	r3, #0
 80008b0:	d000      	beq.n	80008b4 <_write_r+0x20>
 80008b2:	6023      	str	r3, [r4, #0]
 80008b4:	bd70      	pop	{r4, r5, r6, pc}
 80008b6:	46c0      	nop			; (mov r8, r8)
 80008b8:	200001b8 	.word	0x200001b8

080008bc <__errno>:
 80008bc:	4b01      	ldr	r3, [pc, #4]	; (80008c4 <__errno+0x8>)
 80008be:	6818      	ldr	r0, [r3, #0]
 80008c0:	4770      	bx	lr
 80008c2:	46c0      	nop			; (mov r8, r8)
 80008c4:	20000058 	.word	0x20000058

080008c8 <__libc_init_array>:
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	2600      	movs	r6, #0
 80008cc:	4c0c      	ldr	r4, [pc, #48]	; (8000900 <__libc_init_array+0x38>)
 80008ce:	4d0d      	ldr	r5, [pc, #52]	; (8000904 <__libc_init_array+0x3c>)
 80008d0:	1b64      	subs	r4, r4, r5
 80008d2:	10a4      	asrs	r4, r4, #2
 80008d4:	42a6      	cmp	r6, r4
 80008d6:	d109      	bne.n	80008ec <__libc_init_array+0x24>
 80008d8:	2600      	movs	r6, #0
 80008da:	f000 fde3 	bl	80014a4 <_init>
 80008de:	4c0a      	ldr	r4, [pc, #40]	; (8000908 <__libc_init_array+0x40>)
 80008e0:	4d0a      	ldr	r5, [pc, #40]	; (800090c <__libc_init_array+0x44>)
 80008e2:	1b64      	subs	r4, r4, r5
 80008e4:	10a4      	asrs	r4, r4, #2
 80008e6:	42a6      	cmp	r6, r4
 80008e8:	d105      	bne.n	80008f6 <__libc_init_array+0x2e>
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	00b3      	lsls	r3, r6, #2
 80008ee:	58eb      	ldr	r3, [r5, r3]
 80008f0:	4798      	blx	r3
 80008f2:	3601      	adds	r6, #1
 80008f4:	e7ee      	b.n	80008d4 <__libc_init_array+0xc>
 80008f6:	00b3      	lsls	r3, r6, #2
 80008f8:	58eb      	ldr	r3, [r5, r3]
 80008fa:	4798      	blx	r3
 80008fc:	3601      	adds	r6, #1
 80008fe:	e7f2      	b.n	80008e6 <__libc_init_array+0x1e>
 8000900:	08001504 	.word	0x08001504
 8000904:	08001504 	.word	0x08001504
 8000908:	08001508 	.word	0x08001508
 800090c:	08001504 	.word	0x08001504

08000910 <__retarget_lock_init_recursive>:
 8000910:	4770      	bx	lr

08000912 <__retarget_lock_acquire_recursive>:
 8000912:	4770      	bx	lr

08000914 <__retarget_lock_release_recursive>:
 8000914:	4770      	bx	lr
	...

08000918 <_free_r>:
 8000918:	b570      	push	{r4, r5, r6, lr}
 800091a:	0005      	movs	r5, r0
 800091c:	2900      	cmp	r1, #0
 800091e:	d010      	beq.n	8000942 <_free_r+0x2a>
 8000920:	1f0c      	subs	r4, r1, #4
 8000922:	6823      	ldr	r3, [r4, #0]
 8000924:	2b00      	cmp	r3, #0
 8000926:	da00      	bge.n	800092a <_free_r+0x12>
 8000928:	18e4      	adds	r4, r4, r3
 800092a:	0028      	movs	r0, r5
 800092c:	f000 f8e2 	bl	8000af4 <__malloc_lock>
 8000930:	4a1d      	ldr	r2, [pc, #116]	; (80009a8 <_free_r+0x90>)
 8000932:	6813      	ldr	r3, [r2, #0]
 8000934:	2b00      	cmp	r3, #0
 8000936:	d105      	bne.n	8000944 <_free_r+0x2c>
 8000938:	6063      	str	r3, [r4, #4]
 800093a:	6014      	str	r4, [r2, #0]
 800093c:	0028      	movs	r0, r5
 800093e:	f000 f8e1 	bl	8000b04 <__malloc_unlock>
 8000942:	bd70      	pop	{r4, r5, r6, pc}
 8000944:	42a3      	cmp	r3, r4
 8000946:	d908      	bls.n	800095a <_free_r+0x42>
 8000948:	6820      	ldr	r0, [r4, #0]
 800094a:	1821      	adds	r1, r4, r0
 800094c:	428b      	cmp	r3, r1
 800094e:	d1f3      	bne.n	8000938 <_free_r+0x20>
 8000950:	6819      	ldr	r1, [r3, #0]
 8000952:	685b      	ldr	r3, [r3, #4]
 8000954:	1809      	adds	r1, r1, r0
 8000956:	6021      	str	r1, [r4, #0]
 8000958:	e7ee      	b.n	8000938 <_free_r+0x20>
 800095a:	001a      	movs	r2, r3
 800095c:	685b      	ldr	r3, [r3, #4]
 800095e:	2b00      	cmp	r3, #0
 8000960:	d001      	beq.n	8000966 <_free_r+0x4e>
 8000962:	42a3      	cmp	r3, r4
 8000964:	d9f9      	bls.n	800095a <_free_r+0x42>
 8000966:	6811      	ldr	r1, [r2, #0]
 8000968:	1850      	adds	r0, r2, r1
 800096a:	42a0      	cmp	r0, r4
 800096c:	d10b      	bne.n	8000986 <_free_r+0x6e>
 800096e:	6820      	ldr	r0, [r4, #0]
 8000970:	1809      	adds	r1, r1, r0
 8000972:	1850      	adds	r0, r2, r1
 8000974:	6011      	str	r1, [r2, #0]
 8000976:	4283      	cmp	r3, r0
 8000978:	d1e0      	bne.n	800093c <_free_r+0x24>
 800097a:	6818      	ldr	r0, [r3, #0]
 800097c:	685b      	ldr	r3, [r3, #4]
 800097e:	1841      	adds	r1, r0, r1
 8000980:	6011      	str	r1, [r2, #0]
 8000982:	6053      	str	r3, [r2, #4]
 8000984:	e7da      	b.n	800093c <_free_r+0x24>
 8000986:	42a0      	cmp	r0, r4
 8000988:	d902      	bls.n	8000990 <_free_r+0x78>
 800098a:	230c      	movs	r3, #12
 800098c:	602b      	str	r3, [r5, #0]
 800098e:	e7d5      	b.n	800093c <_free_r+0x24>
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	1821      	adds	r1, r4, r0
 8000994:	428b      	cmp	r3, r1
 8000996:	d103      	bne.n	80009a0 <_free_r+0x88>
 8000998:	6819      	ldr	r1, [r3, #0]
 800099a:	685b      	ldr	r3, [r3, #4]
 800099c:	1809      	adds	r1, r1, r0
 800099e:	6021      	str	r1, [r4, #0]
 80009a0:	6063      	str	r3, [r4, #4]
 80009a2:	6054      	str	r4, [r2, #4]
 80009a4:	e7ca      	b.n	800093c <_free_r+0x24>
 80009a6:	46c0      	nop			; (mov r8, r8)
 80009a8:	200001c0 	.word	0x200001c0

080009ac <sbrk_aligned>:
 80009ac:	b570      	push	{r4, r5, r6, lr}
 80009ae:	4e0f      	ldr	r6, [pc, #60]	; (80009ec <sbrk_aligned+0x40>)
 80009b0:	000d      	movs	r5, r1
 80009b2:	6831      	ldr	r1, [r6, #0]
 80009b4:	0004      	movs	r4, r0
 80009b6:	2900      	cmp	r1, #0
 80009b8:	d102      	bne.n	80009c0 <sbrk_aligned+0x14>
 80009ba:	f000 fccb 	bl	8001354 <_sbrk_r>
 80009be:	6030      	str	r0, [r6, #0]
 80009c0:	0029      	movs	r1, r5
 80009c2:	0020      	movs	r0, r4
 80009c4:	f000 fcc6 	bl	8001354 <_sbrk_r>
 80009c8:	1c43      	adds	r3, r0, #1
 80009ca:	d00a      	beq.n	80009e2 <sbrk_aligned+0x36>
 80009cc:	2303      	movs	r3, #3
 80009ce:	1cc5      	adds	r5, r0, #3
 80009d0:	439d      	bics	r5, r3
 80009d2:	42a8      	cmp	r0, r5
 80009d4:	d007      	beq.n	80009e6 <sbrk_aligned+0x3a>
 80009d6:	1a29      	subs	r1, r5, r0
 80009d8:	0020      	movs	r0, r4
 80009da:	f000 fcbb 	bl	8001354 <_sbrk_r>
 80009de:	3001      	adds	r0, #1
 80009e0:	d101      	bne.n	80009e6 <sbrk_aligned+0x3a>
 80009e2:	2501      	movs	r5, #1
 80009e4:	426d      	negs	r5, r5
 80009e6:	0028      	movs	r0, r5
 80009e8:	bd70      	pop	{r4, r5, r6, pc}
 80009ea:	46c0      	nop			; (mov r8, r8)
 80009ec:	200001c4 	.word	0x200001c4

080009f0 <_malloc_r>:
 80009f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80009f2:	2203      	movs	r2, #3
 80009f4:	1ccb      	adds	r3, r1, #3
 80009f6:	4393      	bics	r3, r2
 80009f8:	3308      	adds	r3, #8
 80009fa:	0006      	movs	r6, r0
 80009fc:	001f      	movs	r7, r3
 80009fe:	2b0c      	cmp	r3, #12
 8000a00:	d238      	bcs.n	8000a74 <_malloc_r+0x84>
 8000a02:	270c      	movs	r7, #12
 8000a04:	42b9      	cmp	r1, r7
 8000a06:	d837      	bhi.n	8000a78 <_malloc_r+0x88>
 8000a08:	0030      	movs	r0, r6
 8000a0a:	f000 f873 	bl	8000af4 <__malloc_lock>
 8000a0e:	4b38      	ldr	r3, [pc, #224]	; (8000af0 <_malloc_r+0x100>)
 8000a10:	9300      	str	r3, [sp, #0]
 8000a12:	681b      	ldr	r3, [r3, #0]
 8000a14:	001c      	movs	r4, r3
 8000a16:	2c00      	cmp	r4, #0
 8000a18:	d133      	bne.n	8000a82 <_malloc_r+0x92>
 8000a1a:	0039      	movs	r1, r7
 8000a1c:	0030      	movs	r0, r6
 8000a1e:	f7ff ffc5 	bl	80009ac <sbrk_aligned>
 8000a22:	0004      	movs	r4, r0
 8000a24:	1c43      	adds	r3, r0, #1
 8000a26:	d15e      	bne.n	8000ae6 <_malloc_r+0xf6>
 8000a28:	9b00      	ldr	r3, [sp, #0]
 8000a2a:	681c      	ldr	r4, [r3, #0]
 8000a2c:	0025      	movs	r5, r4
 8000a2e:	2d00      	cmp	r5, #0
 8000a30:	d14e      	bne.n	8000ad0 <_malloc_r+0xe0>
 8000a32:	2c00      	cmp	r4, #0
 8000a34:	d051      	beq.n	8000ada <_malloc_r+0xea>
 8000a36:	6823      	ldr	r3, [r4, #0]
 8000a38:	0029      	movs	r1, r5
 8000a3a:	18e3      	adds	r3, r4, r3
 8000a3c:	0030      	movs	r0, r6
 8000a3e:	9301      	str	r3, [sp, #4]
 8000a40:	f000 fc88 	bl	8001354 <_sbrk_r>
 8000a44:	9b01      	ldr	r3, [sp, #4]
 8000a46:	4283      	cmp	r3, r0
 8000a48:	d147      	bne.n	8000ada <_malloc_r+0xea>
 8000a4a:	6823      	ldr	r3, [r4, #0]
 8000a4c:	0030      	movs	r0, r6
 8000a4e:	1aff      	subs	r7, r7, r3
 8000a50:	0039      	movs	r1, r7
 8000a52:	f7ff ffab 	bl	80009ac <sbrk_aligned>
 8000a56:	3001      	adds	r0, #1
 8000a58:	d03f      	beq.n	8000ada <_malloc_r+0xea>
 8000a5a:	6823      	ldr	r3, [r4, #0]
 8000a5c:	19db      	adds	r3, r3, r7
 8000a5e:	6023      	str	r3, [r4, #0]
 8000a60:	9b00      	ldr	r3, [sp, #0]
 8000a62:	681b      	ldr	r3, [r3, #0]
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d040      	beq.n	8000aea <_malloc_r+0xfa>
 8000a68:	685a      	ldr	r2, [r3, #4]
 8000a6a:	42a2      	cmp	r2, r4
 8000a6c:	d133      	bne.n	8000ad6 <_malloc_r+0xe6>
 8000a6e:	2200      	movs	r2, #0
 8000a70:	605a      	str	r2, [r3, #4]
 8000a72:	e014      	b.n	8000a9e <_malloc_r+0xae>
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	dac5      	bge.n	8000a04 <_malloc_r+0x14>
 8000a78:	230c      	movs	r3, #12
 8000a7a:	2500      	movs	r5, #0
 8000a7c:	6033      	str	r3, [r6, #0]
 8000a7e:	0028      	movs	r0, r5
 8000a80:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000a82:	6821      	ldr	r1, [r4, #0]
 8000a84:	1bc9      	subs	r1, r1, r7
 8000a86:	d420      	bmi.n	8000aca <_malloc_r+0xda>
 8000a88:	290b      	cmp	r1, #11
 8000a8a:	d918      	bls.n	8000abe <_malloc_r+0xce>
 8000a8c:	19e2      	adds	r2, r4, r7
 8000a8e:	6027      	str	r7, [r4, #0]
 8000a90:	42a3      	cmp	r3, r4
 8000a92:	d112      	bne.n	8000aba <_malloc_r+0xca>
 8000a94:	9b00      	ldr	r3, [sp, #0]
 8000a96:	601a      	str	r2, [r3, #0]
 8000a98:	6863      	ldr	r3, [r4, #4]
 8000a9a:	6011      	str	r1, [r2, #0]
 8000a9c:	6053      	str	r3, [r2, #4]
 8000a9e:	0030      	movs	r0, r6
 8000aa0:	0025      	movs	r5, r4
 8000aa2:	f000 f82f 	bl	8000b04 <__malloc_unlock>
 8000aa6:	2207      	movs	r2, #7
 8000aa8:	350b      	adds	r5, #11
 8000aaa:	1d23      	adds	r3, r4, #4
 8000aac:	4395      	bics	r5, r2
 8000aae:	1aea      	subs	r2, r5, r3
 8000ab0:	429d      	cmp	r5, r3
 8000ab2:	d0e4      	beq.n	8000a7e <_malloc_r+0x8e>
 8000ab4:	1b5b      	subs	r3, r3, r5
 8000ab6:	50a3      	str	r3, [r4, r2]
 8000ab8:	e7e1      	b.n	8000a7e <_malloc_r+0x8e>
 8000aba:	605a      	str	r2, [r3, #4]
 8000abc:	e7ec      	b.n	8000a98 <_malloc_r+0xa8>
 8000abe:	6862      	ldr	r2, [r4, #4]
 8000ac0:	42a3      	cmp	r3, r4
 8000ac2:	d1d5      	bne.n	8000a70 <_malloc_r+0x80>
 8000ac4:	9b00      	ldr	r3, [sp, #0]
 8000ac6:	601a      	str	r2, [r3, #0]
 8000ac8:	e7e9      	b.n	8000a9e <_malloc_r+0xae>
 8000aca:	0023      	movs	r3, r4
 8000acc:	6864      	ldr	r4, [r4, #4]
 8000ace:	e7a2      	b.n	8000a16 <_malloc_r+0x26>
 8000ad0:	002c      	movs	r4, r5
 8000ad2:	686d      	ldr	r5, [r5, #4]
 8000ad4:	e7ab      	b.n	8000a2e <_malloc_r+0x3e>
 8000ad6:	0013      	movs	r3, r2
 8000ad8:	e7c4      	b.n	8000a64 <_malloc_r+0x74>
 8000ada:	230c      	movs	r3, #12
 8000adc:	0030      	movs	r0, r6
 8000ade:	6033      	str	r3, [r6, #0]
 8000ae0:	f000 f810 	bl	8000b04 <__malloc_unlock>
 8000ae4:	e7cb      	b.n	8000a7e <_malloc_r+0x8e>
 8000ae6:	6027      	str	r7, [r4, #0]
 8000ae8:	e7d9      	b.n	8000a9e <_malloc_r+0xae>
 8000aea:	605b      	str	r3, [r3, #4]
 8000aec:	deff      	udf	#255	; 0xff
 8000aee:	46c0      	nop			; (mov r8, r8)
 8000af0:	200001c0 	.word	0x200001c0

08000af4 <__malloc_lock>:
 8000af4:	b510      	push	{r4, lr}
 8000af6:	4802      	ldr	r0, [pc, #8]	; (8000b00 <__malloc_lock+0xc>)
 8000af8:	f7ff ff0b 	bl	8000912 <__retarget_lock_acquire_recursive>
 8000afc:	bd10      	pop	{r4, pc}
 8000afe:	46c0      	nop			; (mov r8, r8)
 8000b00:	200001bc 	.word	0x200001bc

08000b04 <__malloc_unlock>:
 8000b04:	b510      	push	{r4, lr}
 8000b06:	4802      	ldr	r0, [pc, #8]	; (8000b10 <__malloc_unlock+0xc>)
 8000b08:	f7ff ff04 	bl	8000914 <__retarget_lock_release_recursive>
 8000b0c:	bd10      	pop	{r4, pc}
 8000b0e:	46c0      	nop			; (mov r8, r8)
 8000b10:	200001bc 	.word	0x200001bc

08000b14 <__sfputc_r>:
 8000b14:	6893      	ldr	r3, [r2, #8]
 8000b16:	b510      	push	{r4, lr}
 8000b18:	3b01      	subs	r3, #1
 8000b1a:	6093      	str	r3, [r2, #8]
 8000b1c:	2b00      	cmp	r3, #0
 8000b1e:	da04      	bge.n	8000b2a <__sfputc_r+0x16>
 8000b20:	6994      	ldr	r4, [r2, #24]
 8000b22:	42a3      	cmp	r3, r4
 8000b24:	db07      	blt.n	8000b36 <__sfputc_r+0x22>
 8000b26:	290a      	cmp	r1, #10
 8000b28:	d005      	beq.n	8000b36 <__sfputc_r+0x22>
 8000b2a:	6813      	ldr	r3, [r2, #0]
 8000b2c:	1c58      	adds	r0, r3, #1
 8000b2e:	6010      	str	r0, [r2, #0]
 8000b30:	7019      	strb	r1, [r3, #0]
 8000b32:	0008      	movs	r0, r1
 8000b34:	bd10      	pop	{r4, pc}
 8000b36:	f000 fb66 	bl	8001206 <__swbuf_r>
 8000b3a:	0001      	movs	r1, r0
 8000b3c:	e7f9      	b.n	8000b32 <__sfputc_r+0x1e>

08000b3e <__sfputs_r>:
 8000b3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b40:	0006      	movs	r6, r0
 8000b42:	000f      	movs	r7, r1
 8000b44:	0014      	movs	r4, r2
 8000b46:	18d5      	adds	r5, r2, r3
 8000b48:	42ac      	cmp	r4, r5
 8000b4a:	d101      	bne.n	8000b50 <__sfputs_r+0x12>
 8000b4c:	2000      	movs	r0, #0
 8000b4e:	e007      	b.n	8000b60 <__sfputs_r+0x22>
 8000b50:	7821      	ldrb	r1, [r4, #0]
 8000b52:	003a      	movs	r2, r7
 8000b54:	0030      	movs	r0, r6
 8000b56:	f7ff ffdd 	bl	8000b14 <__sfputc_r>
 8000b5a:	3401      	adds	r4, #1
 8000b5c:	1c43      	adds	r3, r0, #1
 8000b5e:	d1f3      	bne.n	8000b48 <__sfputs_r+0xa>
 8000b60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000b64 <_vfiprintf_r>:
 8000b64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b66:	b0a1      	sub	sp, #132	; 0x84
 8000b68:	000f      	movs	r7, r1
 8000b6a:	0015      	movs	r5, r2
 8000b6c:	001e      	movs	r6, r3
 8000b6e:	9003      	str	r0, [sp, #12]
 8000b70:	2800      	cmp	r0, #0
 8000b72:	d004      	beq.n	8000b7e <_vfiprintf_r+0x1a>
 8000b74:	6a03      	ldr	r3, [r0, #32]
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d101      	bne.n	8000b7e <_vfiprintf_r+0x1a>
 8000b7a:	f7ff fdb9 	bl	80006f0 <__sinit>
 8000b7e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000b80:	07db      	lsls	r3, r3, #31
 8000b82:	d405      	bmi.n	8000b90 <_vfiprintf_r+0x2c>
 8000b84:	89bb      	ldrh	r3, [r7, #12]
 8000b86:	059b      	lsls	r3, r3, #22
 8000b88:	d402      	bmi.n	8000b90 <_vfiprintf_r+0x2c>
 8000b8a:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000b8c:	f7ff fec1 	bl	8000912 <__retarget_lock_acquire_recursive>
 8000b90:	89bb      	ldrh	r3, [r7, #12]
 8000b92:	071b      	lsls	r3, r3, #28
 8000b94:	d502      	bpl.n	8000b9c <_vfiprintf_r+0x38>
 8000b96:	693b      	ldr	r3, [r7, #16]
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	d113      	bne.n	8000bc4 <_vfiprintf_r+0x60>
 8000b9c:	0039      	movs	r1, r7
 8000b9e:	9803      	ldr	r0, [sp, #12]
 8000ba0:	f000 fb74 	bl	800128c <__swsetup_r>
 8000ba4:	2800      	cmp	r0, #0
 8000ba6:	d00d      	beq.n	8000bc4 <_vfiprintf_r+0x60>
 8000ba8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000baa:	07db      	lsls	r3, r3, #31
 8000bac:	d503      	bpl.n	8000bb6 <_vfiprintf_r+0x52>
 8000bae:	2001      	movs	r0, #1
 8000bb0:	4240      	negs	r0, r0
 8000bb2:	b021      	add	sp, #132	; 0x84
 8000bb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000bb6:	89bb      	ldrh	r3, [r7, #12]
 8000bb8:	059b      	lsls	r3, r3, #22
 8000bba:	d4f8      	bmi.n	8000bae <_vfiprintf_r+0x4a>
 8000bbc:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000bbe:	f7ff fea9 	bl	8000914 <__retarget_lock_release_recursive>
 8000bc2:	e7f4      	b.n	8000bae <_vfiprintf_r+0x4a>
 8000bc4:	2300      	movs	r3, #0
 8000bc6:	ac08      	add	r4, sp, #32
 8000bc8:	6163      	str	r3, [r4, #20]
 8000bca:	3320      	adds	r3, #32
 8000bcc:	7663      	strb	r3, [r4, #25]
 8000bce:	3310      	adds	r3, #16
 8000bd0:	76a3      	strb	r3, [r4, #26]
 8000bd2:	9607      	str	r6, [sp, #28]
 8000bd4:	002e      	movs	r6, r5
 8000bd6:	7833      	ldrb	r3, [r6, #0]
 8000bd8:	2b00      	cmp	r3, #0
 8000bda:	d001      	beq.n	8000be0 <_vfiprintf_r+0x7c>
 8000bdc:	2b25      	cmp	r3, #37	; 0x25
 8000bde:	d148      	bne.n	8000c72 <_vfiprintf_r+0x10e>
 8000be0:	1b73      	subs	r3, r6, r5
 8000be2:	9305      	str	r3, [sp, #20]
 8000be4:	42ae      	cmp	r6, r5
 8000be6:	d00b      	beq.n	8000c00 <_vfiprintf_r+0x9c>
 8000be8:	002a      	movs	r2, r5
 8000bea:	0039      	movs	r1, r7
 8000bec:	9803      	ldr	r0, [sp, #12]
 8000bee:	f7ff ffa6 	bl	8000b3e <__sfputs_r>
 8000bf2:	3001      	adds	r0, #1
 8000bf4:	d100      	bne.n	8000bf8 <_vfiprintf_r+0x94>
 8000bf6:	e0af      	b.n	8000d58 <_vfiprintf_r+0x1f4>
 8000bf8:	6963      	ldr	r3, [r4, #20]
 8000bfa:	9a05      	ldr	r2, [sp, #20]
 8000bfc:	189b      	adds	r3, r3, r2
 8000bfe:	6163      	str	r3, [r4, #20]
 8000c00:	7833      	ldrb	r3, [r6, #0]
 8000c02:	2b00      	cmp	r3, #0
 8000c04:	d100      	bne.n	8000c08 <_vfiprintf_r+0xa4>
 8000c06:	e0a7      	b.n	8000d58 <_vfiprintf_r+0x1f4>
 8000c08:	2201      	movs	r2, #1
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	4252      	negs	r2, r2
 8000c0e:	6062      	str	r2, [r4, #4]
 8000c10:	a904      	add	r1, sp, #16
 8000c12:	3254      	adds	r2, #84	; 0x54
 8000c14:	1852      	adds	r2, r2, r1
 8000c16:	1c75      	adds	r5, r6, #1
 8000c18:	6023      	str	r3, [r4, #0]
 8000c1a:	60e3      	str	r3, [r4, #12]
 8000c1c:	60a3      	str	r3, [r4, #8]
 8000c1e:	7013      	strb	r3, [r2, #0]
 8000c20:	65a3      	str	r3, [r4, #88]	; 0x58
 8000c22:	4b59      	ldr	r3, [pc, #356]	; (8000d88 <_vfiprintf_r+0x224>)
 8000c24:	2205      	movs	r2, #5
 8000c26:	0018      	movs	r0, r3
 8000c28:	7829      	ldrb	r1, [r5, #0]
 8000c2a:	9305      	str	r3, [sp, #20]
 8000c2c:	f000 fba4 	bl	8001378 <memchr>
 8000c30:	1c6e      	adds	r6, r5, #1
 8000c32:	2800      	cmp	r0, #0
 8000c34:	d11f      	bne.n	8000c76 <_vfiprintf_r+0x112>
 8000c36:	6822      	ldr	r2, [r4, #0]
 8000c38:	06d3      	lsls	r3, r2, #27
 8000c3a:	d504      	bpl.n	8000c46 <_vfiprintf_r+0xe2>
 8000c3c:	2353      	movs	r3, #83	; 0x53
 8000c3e:	a904      	add	r1, sp, #16
 8000c40:	185b      	adds	r3, r3, r1
 8000c42:	2120      	movs	r1, #32
 8000c44:	7019      	strb	r1, [r3, #0]
 8000c46:	0713      	lsls	r3, r2, #28
 8000c48:	d504      	bpl.n	8000c54 <_vfiprintf_r+0xf0>
 8000c4a:	2353      	movs	r3, #83	; 0x53
 8000c4c:	a904      	add	r1, sp, #16
 8000c4e:	185b      	adds	r3, r3, r1
 8000c50:	212b      	movs	r1, #43	; 0x2b
 8000c52:	7019      	strb	r1, [r3, #0]
 8000c54:	782b      	ldrb	r3, [r5, #0]
 8000c56:	2b2a      	cmp	r3, #42	; 0x2a
 8000c58:	d016      	beq.n	8000c88 <_vfiprintf_r+0x124>
 8000c5a:	002e      	movs	r6, r5
 8000c5c:	2100      	movs	r1, #0
 8000c5e:	200a      	movs	r0, #10
 8000c60:	68e3      	ldr	r3, [r4, #12]
 8000c62:	7832      	ldrb	r2, [r6, #0]
 8000c64:	1c75      	adds	r5, r6, #1
 8000c66:	3a30      	subs	r2, #48	; 0x30
 8000c68:	2a09      	cmp	r2, #9
 8000c6a:	d94e      	bls.n	8000d0a <_vfiprintf_r+0x1a6>
 8000c6c:	2900      	cmp	r1, #0
 8000c6e:	d111      	bne.n	8000c94 <_vfiprintf_r+0x130>
 8000c70:	e017      	b.n	8000ca2 <_vfiprintf_r+0x13e>
 8000c72:	3601      	adds	r6, #1
 8000c74:	e7af      	b.n	8000bd6 <_vfiprintf_r+0x72>
 8000c76:	9b05      	ldr	r3, [sp, #20]
 8000c78:	6822      	ldr	r2, [r4, #0]
 8000c7a:	1ac0      	subs	r0, r0, r3
 8000c7c:	2301      	movs	r3, #1
 8000c7e:	4083      	lsls	r3, r0
 8000c80:	4313      	orrs	r3, r2
 8000c82:	0035      	movs	r5, r6
 8000c84:	6023      	str	r3, [r4, #0]
 8000c86:	e7cc      	b.n	8000c22 <_vfiprintf_r+0xbe>
 8000c88:	9b07      	ldr	r3, [sp, #28]
 8000c8a:	1d19      	adds	r1, r3, #4
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	9107      	str	r1, [sp, #28]
 8000c90:	2b00      	cmp	r3, #0
 8000c92:	db01      	blt.n	8000c98 <_vfiprintf_r+0x134>
 8000c94:	930b      	str	r3, [sp, #44]	; 0x2c
 8000c96:	e004      	b.n	8000ca2 <_vfiprintf_r+0x13e>
 8000c98:	425b      	negs	r3, r3
 8000c9a:	60e3      	str	r3, [r4, #12]
 8000c9c:	2302      	movs	r3, #2
 8000c9e:	4313      	orrs	r3, r2
 8000ca0:	6023      	str	r3, [r4, #0]
 8000ca2:	7833      	ldrb	r3, [r6, #0]
 8000ca4:	2b2e      	cmp	r3, #46	; 0x2e
 8000ca6:	d10a      	bne.n	8000cbe <_vfiprintf_r+0x15a>
 8000ca8:	7873      	ldrb	r3, [r6, #1]
 8000caa:	2b2a      	cmp	r3, #42	; 0x2a
 8000cac:	d135      	bne.n	8000d1a <_vfiprintf_r+0x1b6>
 8000cae:	9b07      	ldr	r3, [sp, #28]
 8000cb0:	3602      	adds	r6, #2
 8000cb2:	1d1a      	adds	r2, r3, #4
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	9207      	str	r2, [sp, #28]
 8000cb8:	2b00      	cmp	r3, #0
 8000cba:	db2b      	blt.n	8000d14 <_vfiprintf_r+0x1b0>
 8000cbc:	9309      	str	r3, [sp, #36]	; 0x24
 8000cbe:	4d33      	ldr	r5, [pc, #204]	; (8000d8c <_vfiprintf_r+0x228>)
 8000cc0:	2203      	movs	r2, #3
 8000cc2:	0028      	movs	r0, r5
 8000cc4:	7831      	ldrb	r1, [r6, #0]
 8000cc6:	f000 fb57 	bl	8001378 <memchr>
 8000cca:	2800      	cmp	r0, #0
 8000ccc:	d006      	beq.n	8000cdc <_vfiprintf_r+0x178>
 8000cce:	2340      	movs	r3, #64	; 0x40
 8000cd0:	1b40      	subs	r0, r0, r5
 8000cd2:	4083      	lsls	r3, r0
 8000cd4:	6822      	ldr	r2, [r4, #0]
 8000cd6:	3601      	adds	r6, #1
 8000cd8:	4313      	orrs	r3, r2
 8000cda:	6023      	str	r3, [r4, #0]
 8000cdc:	7831      	ldrb	r1, [r6, #0]
 8000cde:	2206      	movs	r2, #6
 8000ce0:	482b      	ldr	r0, [pc, #172]	; (8000d90 <_vfiprintf_r+0x22c>)
 8000ce2:	1c75      	adds	r5, r6, #1
 8000ce4:	7621      	strb	r1, [r4, #24]
 8000ce6:	f000 fb47 	bl	8001378 <memchr>
 8000cea:	2800      	cmp	r0, #0
 8000cec:	d043      	beq.n	8000d76 <_vfiprintf_r+0x212>
 8000cee:	4b29      	ldr	r3, [pc, #164]	; (8000d94 <_vfiprintf_r+0x230>)
 8000cf0:	2b00      	cmp	r3, #0
 8000cf2:	d125      	bne.n	8000d40 <_vfiprintf_r+0x1dc>
 8000cf4:	2207      	movs	r2, #7
 8000cf6:	9b07      	ldr	r3, [sp, #28]
 8000cf8:	3307      	adds	r3, #7
 8000cfa:	4393      	bics	r3, r2
 8000cfc:	3308      	adds	r3, #8
 8000cfe:	9307      	str	r3, [sp, #28]
 8000d00:	6963      	ldr	r3, [r4, #20]
 8000d02:	9a04      	ldr	r2, [sp, #16]
 8000d04:	189b      	adds	r3, r3, r2
 8000d06:	6163      	str	r3, [r4, #20]
 8000d08:	e764      	b.n	8000bd4 <_vfiprintf_r+0x70>
 8000d0a:	4343      	muls	r3, r0
 8000d0c:	002e      	movs	r6, r5
 8000d0e:	2101      	movs	r1, #1
 8000d10:	189b      	adds	r3, r3, r2
 8000d12:	e7a6      	b.n	8000c62 <_vfiprintf_r+0xfe>
 8000d14:	2301      	movs	r3, #1
 8000d16:	425b      	negs	r3, r3
 8000d18:	e7d0      	b.n	8000cbc <_vfiprintf_r+0x158>
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	200a      	movs	r0, #10
 8000d1e:	001a      	movs	r2, r3
 8000d20:	3601      	adds	r6, #1
 8000d22:	6063      	str	r3, [r4, #4]
 8000d24:	7831      	ldrb	r1, [r6, #0]
 8000d26:	1c75      	adds	r5, r6, #1
 8000d28:	3930      	subs	r1, #48	; 0x30
 8000d2a:	2909      	cmp	r1, #9
 8000d2c:	d903      	bls.n	8000d36 <_vfiprintf_r+0x1d2>
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d0c5      	beq.n	8000cbe <_vfiprintf_r+0x15a>
 8000d32:	9209      	str	r2, [sp, #36]	; 0x24
 8000d34:	e7c3      	b.n	8000cbe <_vfiprintf_r+0x15a>
 8000d36:	4342      	muls	r2, r0
 8000d38:	002e      	movs	r6, r5
 8000d3a:	2301      	movs	r3, #1
 8000d3c:	1852      	adds	r2, r2, r1
 8000d3e:	e7f1      	b.n	8000d24 <_vfiprintf_r+0x1c0>
 8000d40:	aa07      	add	r2, sp, #28
 8000d42:	9200      	str	r2, [sp, #0]
 8000d44:	0021      	movs	r1, r4
 8000d46:	003a      	movs	r2, r7
 8000d48:	4b13      	ldr	r3, [pc, #76]	; (8000d98 <_vfiprintf_r+0x234>)
 8000d4a:	9803      	ldr	r0, [sp, #12]
 8000d4c:	e000      	b.n	8000d50 <_vfiprintf_r+0x1ec>
 8000d4e:	bf00      	nop
 8000d50:	9004      	str	r0, [sp, #16]
 8000d52:	9b04      	ldr	r3, [sp, #16]
 8000d54:	3301      	adds	r3, #1
 8000d56:	d1d3      	bne.n	8000d00 <_vfiprintf_r+0x19c>
 8000d58:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000d5a:	07db      	lsls	r3, r3, #31
 8000d5c:	d405      	bmi.n	8000d6a <_vfiprintf_r+0x206>
 8000d5e:	89bb      	ldrh	r3, [r7, #12]
 8000d60:	059b      	lsls	r3, r3, #22
 8000d62:	d402      	bmi.n	8000d6a <_vfiprintf_r+0x206>
 8000d64:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000d66:	f7ff fdd5 	bl	8000914 <__retarget_lock_release_recursive>
 8000d6a:	89bb      	ldrh	r3, [r7, #12]
 8000d6c:	065b      	lsls	r3, r3, #25
 8000d6e:	d500      	bpl.n	8000d72 <_vfiprintf_r+0x20e>
 8000d70:	e71d      	b.n	8000bae <_vfiprintf_r+0x4a>
 8000d72:	980d      	ldr	r0, [sp, #52]	; 0x34
 8000d74:	e71d      	b.n	8000bb2 <_vfiprintf_r+0x4e>
 8000d76:	aa07      	add	r2, sp, #28
 8000d78:	9200      	str	r2, [sp, #0]
 8000d7a:	0021      	movs	r1, r4
 8000d7c:	003a      	movs	r2, r7
 8000d7e:	4b06      	ldr	r3, [pc, #24]	; (8000d98 <_vfiprintf_r+0x234>)
 8000d80:	9803      	ldr	r0, [sp, #12]
 8000d82:	f000 f87b 	bl	8000e7c <_printf_i>
 8000d86:	e7e3      	b.n	8000d50 <_vfiprintf_r+0x1ec>
 8000d88:	080014d1 	.word	0x080014d1
 8000d8c:	080014d7 	.word	0x080014d7
 8000d90:	080014db 	.word	0x080014db
 8000d94:	00000000 	.word	0x00000000
 8000d98:	08000b3f 	.word	0x08000b3f

08000d9c <_printf_common>:
 8000d9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000d9e:	0016      	movs	r6, r2
 8000da0:	9301      	str	r3, [sp, #4]
 8000da2:	688a      	ldr	r2, [r1, #8]
 8000da4:	690b      	ldr	r3, [r1, #16]
 8000da6:	000c      	movs	r4, r1
 8000da8:	9000      	str	r0, [sp, #0]
 8000daa:	4293      	cmp	r3, r2
 8000dac:	da00      	bge.n	8000db0 <_printf_common+0x14>
 8000dae:	0013      	movs	r3, r2
 8000db0:	0022      	movs	r2, r4
 8000db2:	6033      	str	r3, [r6, #0]
 8000db4:	3243      	adds	r2, #67	; 0x43
 8000db6:	7812      	ldrb	r2, [r2, #0]
 8000db8:	2a00      	cmp	r2, #0
 8000dba:	d001      	beq.n	8000dc0 <_printf_common+0x24>
 8000dbc:	3301      	adds	r3, #1
 8000dbe:	6033      	str	r3, [r6, #0]
 8000dc0:	6823      	ldr	r3, [r4, #0]
 8000dc2:	069b      	lsls	r3, r3, #26
 8000dc4:	d502      	bpl.n	8000dcc <_printf_common+0x30>
 8000dc6:	6833      	ldr	r3, [r6, #0]
 8000dc8:	3302      	adds	r3, #2
 8000dca:	6033      	str	r3, [r6, #0]
 8000dcc:	6822      	ldr	r2, [r4, #0]
 8000dce:	2306      	movs	r3, #6
 8000dd0:	0015      	movs	r5, r2
 8000dd2:	401d      	ands	r5, r3
 8000dd4:	421a      	tst	r2, r3
 8000dd6:	d027      	beq.n	8000e28 <_printf_common+0x8c>
 8000dd8:	0023      	movs	r3, r4
 8000dda:	3343      	adds	r3, #67	; 0x43
 8000ddc:	781b      	ldrb	r3, [r3, #0]
 8000dde:	1e5a      	subs	r2, r3, #1
 8000de0:	4193      	sbcs	r3, r2
 8000de2:	6822      	ldr	r2, [r4, #0]
 8000de4:	0692      	lsls	r2, r2, #26
 8000de6:	d430      	bmi.n	8000e4a <_printf_common+0xae>
 8000de8:	0022      	movs	r2, r4
 8000dea:	9901      	ldr	r1, [sp, #4]
 8000dec:	9800      	ldr	r0, [sp, #0]
 8000dee:	9d08      	ldr	r5, [sp, #32]
 8000df0:	3243      	adds	r2, #67	; 0x43
 8000df2:	47a8      	blx	r5
 8000df4:	3001      	adds	r0, #1
 8000df6:	d025      	beq.n	8000e44 <_printf_common+0xa8>
 8000df8:	2206      	movs	r2, #6
 8000dfa:	6823      	ldr	r3, [r4, #0]
 8000dfc:	2500      	movs	r5, #0
 8000dfe:	4013      	ands	r3, r2
 8000e00:	2b04      	cmp	r3, #4
 8000e02:	d105      	bne.n	8000e10 <_printf_common+0x74>
 8000e04:	6833      	ldr	r3, [r6, #0]
 8000e06:	68e5      	ldr	r5, [r4, #12]
 8000e08:	1aed      	subs	r5, r5, r3
 8000e0a:	43eb      	mvns	r3, r5
 8000e0c:	17db      	asrs	r3, r3, #31
 8000e0e:	401d      	ands	r5, r3
 8000e10:	68a3      	ldr	r3, [r4, #8]
 8000e12:	6922      	ldr	r2, [r4, #16]
 8000e14:	4293      	cmp	r3, r2
 8000e16:	dd01      	ble.n	8000e1c <_printf_common+0x80>
 8000e18:	1a9b      	subs	r3, r3, r2
 8000e1a:	18ed      	adds	r5, r5, r3
 8000e1c:	2600      	movs	r6, #0
 8000e1e:	42b5      	cmp	r5, r6
 8000e20:	d120      	bne.n	8000e64 <_printf_common+0xc8>
 8000e22:	2000      	movs	r0, #0
 8000e24:	e010      	b.n	8000e48 <_printf_common+0xac>
 8000e26:	3501      	adds	r5, #1
 8000e28:	68e3      	ldr	r3, [r4, #12]
 8000e2a:	6832      	ldr	r2, [r6, #0]
 8000e2c:	1a9b      	subs	r3, r3, r2
 8000e2e:	42ab      	cmp	r3, r5
 8000e30:	ddd2      	ble.n	8000dd8 <_printf_common+0x3c>
 8000e32:	0022      	movs	r2, r4
 8000e34:	2301      	movs	r3, #1
 8000e36:	9901      	ldr	r1, [sp, #4]
 8000e38:	9800      	ldr	r0, [sp, #0]
 8000e3a:	9f08      	ldr	r7, [sp, #32]
 8000e3c:	3219      	adds	r2, #25
 8000e3e:	47b8      	blx	r7
 8000e40:	3001      	adds	r0, #1
 8000e42:	d1f0      	bne.n	8000e26 <_printf_common+0x8a>
 8000e44:	2001      	movs	r0, #1
 8000e46:	4240      	negs	r0, r0
 8000e48:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000e4a:	2030      	movs	r0, #48	; 0x30
 8000e4c:	18e1      	adds	r1, r4, r3
 8000e4e:	3143      	adds	r1, #67	; 0x43
 8000e50:	7008      	strb	r0, [r1, #0]
 8000e52:	0021      	movs	r1, r4
 8000e54:	1c5a      	adds	r2, r3, #1
 8000e56:	3145      	adds	r1, #69	; 0x45
 8000e58:	7809      	ldrb	r1, [r1, #0]
 8000e5a:	18a2      	adds	r2, r4, r2
 8000e5c:	3243      	adds	r2, #67	; 0x43
 8000e5e:	3302      	adds	r3, #2
 8000e60:	7011      	strb	r1, [r2, #0]
 8000e62:	e7c1      	b.n	8000de8 <_printf_common+0x4c>
 8000e64:	0022      	movs	r2, r4
 8000e66:	2301      	movs	r3, #1
 8000e68:	9901      	ldr	r1, [sp, #4]
 8000e6a:	9800      	ldr	r0, [sp, #0]
 8000e6c:	9f08      	ldr	r7, [sp, #32]
 8000e6e:	321a      	adds	r2, #26
 8000e70:	47b8      	blx	r7
 8000e72:	3001      	adds	r0, #1
 8000e74:	d0e6      	beq.n	8000e44 <_printf_common+0xa8>
 8000e76:	3601      	adds	r6, #1
 8000e78:	e7d1      	b.n	8000e1e <_printf_common+0x82>
	...

08000e7c <_printf_i>:
 8000e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e7e:	b08b      	sub	sp, #44	; 0x2c
 8000e80:	9206      	str	r2, [sp, #24]
 8000e82:	000a      	movs	r2, r1
 8000e84:	3243      	adds	r2, #67	; 0x43
 8000e86:	9307      	str	r3, [sp, #28]
 8000e88:	9005      	str	r0, [sp, #20]
 8000e8a:	9204      	str	r2, [sp, #16]
 8000e8c:	7e0a      	ldrb	r2, [r1, #24]
 8000e8e:	000c      	movs	r4, r1
 8000e90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8000e92:	2a78      	cmp	r2, #120	; 0x78
 8000e94:	d809      	bhi.n	8000eaa <_printf_i+0x2e>
 8000e96:	2a62      	cmp	r2, #98	; 0x62
 8000e98:	d80b      	bhi.n	8000eb2 <_printf_i+0x36>
 8000e9a:	2a00      	cmp	r2, #0
 8000e9c:	d100      	bne.n	8000ea0 <_printf_i+0x24>
 8000e9e:	e0be      	b.n	800101e <_printf_i+0x1a2>
 8000ea0:	497c      	ldr	r1, [pc, #496]	; (8001094 <_printf_i+0x218>)
 8000ea2:	9103      	str	r1, [sp, #12]
 8000ea4:	2a58      	cmp	r2, #88	; 0x58
 8000ea6:	d100      	bne.n	8000eaa <_printf_i+0x2e>
 8000ea8:	e093      	b.n	8000fd2 <_printf_i+0x156>
 8000eaa:	0026      	movs	r6, r4
 8000eac:	3642      	adds	r6, #66	; 0x42
 8000eae:	7032      	strb	r2, [r6, #0]
 8000eb0:	e022      	b.n	8000ef8 <_printf_i+0x7c>
 8000eb2:	0010      	movs	r0, r2
 8000eb4:	3863      	subs	r0, #99	; 0x63
 8000eb6:	2815      	cmp	r0, #21
 8000eb8:	d8f7      	bhi.n	8000eaa <_printf_i+0x2e>
 8000eba:	f7ff f925 	bl	8000108 <__gnu_thumb1_case_shi>
 8000ebe:	0016      	.short	0x0016
 8000ec0:	fff6001f 	.word	0xfff6001f
 8000ec4:	fff6fff6 	.word	0xfff6fff6
 8000ec8:	001ffff6 	.word	0x001ffff6
 8000ecc:	fff6fff6 	.word	0xfff6fff6
 8000ed0:	fff6fff6 	.word	0xfff6fff6
 8000ed4:	003600a3 	.word	0x003600a3
 8000ed8:	fff60083 	.word	0xfff60083
 8000edc:	00b4fff6 	.word	0x00b4fff6
 8000ee0:	0036fff6 	.word	0x0036fff6
 8000ee4:	fff6fff6 	.word	0xfff6fff6
 8000ee8:	0087      	.short	0x0087
 8000eea:	0026      	movs	r6, r4
 8000eec:	681a      	ldr	r2, [r3, #0]
 8000eee:	3642      	adds	r6, #66	; 0x42
 8000ef0:	1d11      	adds	r1, r2, #4
 8000ef2:	6019      	str	r1, [r3, #0]
 8000ef4:	6813      	ldr	r3, [r2, #0]
 8000ef6:	7033      	strb	r3, [r6, #0]
 8000ef8:	2301      	movs	r3, #1
 8000efa:	e0a2      	b.n	8001042 <_printf_i+0x1c6>
 8000efc:	6818      	ldr	r0, [r3, #0]
 8000efe:	6809      	ldr	r1, [r1, #0]
 8000f00:	1d02      	adds	r2, r0, #4
 8000f02:	060d      	lsls	r5, r1, #24
 8000f04:	d50b      	bpl.n	8000f1e <_printf_i+0xa2>
 8000f06:	6805      	ldr	r5, [r0, #0]
 8000f08:	601a      	str	r2, [r3, #0]
 8000f0a:	2d00      	cmp	r5, #0
 8000f0c:	da03      	bge.n	8000f16 <_printf_i+0x9a>
 8000f0e:	232d      	movs	r3, #45	; 0x2d
 8000f10:	9a04      	ldr	r2, [sp, #16]
 8000f12:	426d      	negs	r5, r5
 8000f14:	7013      	strb	r3, [r2, #0]
 8000f16:	4b5f      	ldr	r3, [pc, #380]	; (8001094 <_printf_i+0x218>)
 8000f18:	270a      	movs	r7, #10
 8000f1a:	9303      	str	r3, [sp, #12]
 8000f1c:	e01b      	b.n	8000f56 <_printf_i+0xda>
 8000f1e:	6805      	ldr	r5, [r0, #0]
 8000f20:	601a      	str	r2, [r3, #0]
 8000f22:	0649      	lsls	r1, r1, #25
 8000f24:	d5f1      	bpl.n	8000f0a <_printf_i+0x8e>
 8000f26:	b22d      	sxth	r5, r5
 8000f28:	e7ef      	b.n	8000f0a <_printf_i+0x8e>
 8000f2a:	680d      	ldr	r5, [r1, #0]
 8000f2c:	6819      	ldr	r1, [r3, #0]
 8000f2e:	1d08      	adds	r0, r1, #4
 8000f30:	6018      	str	r0, [r3, #0]
 8000f32:	062e      	lsls	r6, r5, #24
 8000f34:	d501      	bpl.n	8000f3a <_printf_i+0xbe>
 8000f36:	680d      	ldr	r5, [r1, #0]
 8000f38:	e003      	b.n	8000f42 <_printf_i+0xc6>
 8000f3a:	066d      	lsls	r5, r5, #25
 8000f3c:	d5fb      	bpl.n	8000f36 <_printf_i+0xba>
 8000f3e:	680d      	ldr	r5, [r1, #0]
 8000f40:	b2ad      	uxth	r5, r5
 8000f42:	4b54      	ldr	r3, [pc, #336]	; (8001094 <_printf_i+0x218>)
 8000f44:	2708      	movs	r7, #8
 8000f46:	9303      	str	r3, [sp, #12]
 8000f48:	2a6f      	cmp	r2, #111	; 0x6f
 8000f4a:	d000      	beq.n	8000f4e <_printf_i+0xd2>
 8000f4c:	3702      	adds	r7, #2
 8000f4e:	0023      	movs	r3, r4
 8000f50:	2200      	movs	r2, #0
 8000f52:	3343      	adds	r3, #67	; 0x43
 8000f54:	701a      	strb	r2, [r3, #0]
 8000f56:	6863      	ldr	r3, [r4, #4]
 8000f58:	60a3      	str	r3, [r4, #8]
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	db03      	blt.n	8000f66 <_printf_i+0xea>
 8000f5e:	2104      	movs	r1, #4
 8000f60:	6822      	ldr	r2, [r4, #0]
 8000f62:	438a      	bics	r2, r1
 8000f64:	6022      	str	r2, [r4, #0]
 8000f66:	2d00      	cmp	r5, #0
 8000f68:	d102      	bne.n	8000f70 <_printf_i+0xf4>
 8000f6a:	9e04      	ldr	r6, [sp, #16]
 8000f6c:	2b00      	cmp	r3, #0
 8000f6e:	d00c      	beq.n	8000f8a <_printf_i+0x10e>
 8000f70:	9e04      	ldr	r6, [sp, #16]
 8000f72:	0028      	movs	r0, r5
 8000f74:	0039      	movs	r1, r7
 8000f76:	f7ff f957 	bl	8000228 <__aeabi_uidivmod>
 8000f7a:	9b03      	ldr	r3, [sp, #12]
 8000f7c:	3e01      	subs	r6, #1
 8000f7e:	5c5b      	ldrb	r3, [r3, r1]
 8000f80:	7033      	strb	r3, [r6, #0]
 8000f82:	002b      	movs	r3, r5
 8000f84:	0005      	movs	r5, r0
 8000f86:	429f      	cmp	r7, r3
 8000f88:	d9f3      	bls.n	8000f72 <_printf_i+0xf6>
 8000f8a:	2f08      	cmp	r7, #8
 8000f8c:	d109      	bne.n	8000fa2 <_printf_i+0x126>
 8000f8e:	6823      	ldr	r3, [r4, #0]
 8000f90:	07db      	lsls	r3, r3, #31
 8000f92:	d506      	bpl.n	8000fa2 <_printf_i+0x126>
 8000f94:	6862      	ldr	r2, [r4, #4]
 8000f96:	6923      	ldr	r3, [r4, #16]
 8000f98:	429a      	cmp	r2, r3
 8000f9a:	dc02      	bgt.n	8000fa2 <_printf_i+0x126>
 8000f9c:	2330      	movs	r3, #48	; 0x30
 8000f9e:	3e01      	subs	r6, #1
 8000fa0:	7033      	strb	r3, [r6, #0]
 8000fa2:	9b04      	ldr	r3, [sp, #16]
 8000fa4:	1b9b      	subs	r3, r3, r6
 8000fa6:	6123      	str	r3, [r4, #16]
 8000fa8:	9b07      	ldr	r3, [sp, #28]
 8000faa:	0021      	movs	r1, r4
 8000fac:	9300      	str	r3, [sp, #0]
 8000fae:	9805      	ldr	r0, [sp, #20]
 8000fb0:	9b06      	ldr	r3, [sp, #24]
 8000fb2:	aa09      	add	r2, sp, #36	; 0x24
 8000fb4:	f7ff fef2 	bl	8000d9c <_printf_common>
 8000fb8:	3001      	adds	r0, #1
 8000fba:	d147      	bne.n	800104c <_printf_i+0x1d0>
 8000fbc:	2001      	movs	r0, #1
 8000fbe:	4240      	negs	r0, r0
 8000fc0:	b00b      	add	sp, #44	; 0x2c
 8000fc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000fc4:	2220      	movs	r2, #32
 8000fc6:	6809      	ldr	r1, [r1, #0]
 8000fc8:	430a      	orrs	r2, r1
 8000fca:	6022      	str	r2, [r4, #0]
 8000fcc:	2278      	movs	r2, #120	; 0x78
 8000fce:	4932      	ldr	r1, [pc, #200]	; (8001098 <_printf_i+0x21c>)
 8000fd0:	9103      	str	r1, [sp, #12]
 8000fd2:	0021      	movs	r1, r4
 8000fd4:	3145      	adds	r1, #69	; 0x45
 8000fd6:	700a      	strb	r2, [r1, #0]
 8000fd8:	6819      	ldr	r1, [r3, #0]
 8000fda:	6822      	ldr	r2, [r4, #0]
 8000fdc:	c920      	ldmia	r1!, {r5}
 8000fde:	0610      	lsls	r0, r2, #24
 8000fe0:	d402      	bmi.n	8000fe8 <_printf_i+0x16c>
 8000fe2:	0650      	lsls	r0, r2, #25
 8000fe4:	d500      	bpl.n	8000fe8 <_printf_i+0x16c>
 8000fe6:	b2ad      	uxth	r5, r5
 8000fe8:	6019      	str	r1, [r3, #0]
 8000fea:	07d3      	lsls	r3, r2, #31
 8000fec:	d502      	bpl.n	8000ff4 <_printf_i+0x178>
 8000fee:	2320      	movs	r3, #32
 8000ff0:	4313      	orrs	r3, r2
 8000ff2:	6023      	str	r3, [r4, #0]
 8000ff4:	2710      	movs	r7, #16
 8000ff6:	2d00      	cmp	r5, #0
 8000ff8:	d1a9      	bne.n	8000f4e <_printf_i+0xd2>
 8000ffa:	2220      	movs	r2, #32
 8000ffc:	6823      	ldr	r3, [r4, #0]
 8000ffe:	4393      	bics	r3, r2
 8001000:	6023      	str	r3, [r4, #0]
 8001002:	e7a4      	b.n	8000f4e <_printf_i+0xd2>
 8001004:	681a      	ldr	r2, [r3, #0]
 8001006:	680d      	ldr	r5, [r1, #0]
 8001008:	1d10      	adds	r0, r2, #4
 800100a:	6949      	ldr	r1, [r1, #20]
 800100c:	6018      	str	r0, [r3, #0]
 800100e:	6813      	ldr	r3, [r2, #0]
 8001010:	062e      	lsls	r6, r5, #24
 8001012:	d501      	bpl.n	8001018 <_printf_i+0x19c>
 8001014:	6019      	str	r1, [r3, #0]
 8001016:	e002      	b.n	800101e <_printf_i+0x1a2>
 8001018:	066d      	lsls	r5, r5, #25
 800101a:	d5fb      	bpl.n	8001014 <_printf_i+0x198>
 800101c:	8019      	strh	r1, [r3, #0]
 800101e:	2300      	movs	r3, #0
 8001020:	9e04      	ldr	r6, [sp, #16]
 8001022:	6123      	str	r3, [r4, #16]
 8001024:	e7c0      	b.n	8000fa8 <_printf_i+0x12c>
 8001026:	681a      	ldr	r2, [r3, #0]
 8001028:	1d11      	adds	r1, r2, #4
 800102a:	6019      	str	r1, [r3, #0]
 800102c:	6816      	ldr	r6, [r2, #0]
 800102e:	2100      	movs	r1, #0
 8001030:	0030      	movs	r0, r6
 8001032:	6862      	ldr	r2, [r4, #4]
 8001034:	f000 f9a0 	bl	8001378 <memchr>
 8001038:	2800      	cmp	r0, #0
 800103a:	d001      	beq.n	8001040 <_printf_i+0x1c4>
 800103c:	1b80      	subs	r0, r0, r6
 800103e:	6060      	str	r0, [r4, #4]
 8001040:	6863      	ldr	r3, [r4, #4]
 8001042:	6123      	str	r3, [r4, #16]
 8001044:	2300      	movs	r3, #0
 8001046:	9a04      	ldr	r2, [sp, #16]
 8001048:	7013      	strb	r3, [r2, #0]
 800104a:	e7ad      	b.n	8000fa8 <_printf_i+0x12c>
 800104c:	0032      	movs	r2, r6
 800104e:	6923      	ldr	r3, [r4, #16]
 8001050:	9906      	ldr	r1, [sp, #24]
 8001052:	9805      	ldr	r0, [sp, #20]
 8001054:	9d07      	ldr	r5, [sp, #28]
 8001056:	47a8      	blx	r5
 8001058:	3001      	adds	r0, #1
 800105a:	d0af      	beq.n	8000fbc <_printf_i+0x140>
 800105c:	6823      	ldr	r3, [r4, #0]
 800105e:	079b      	lsls	r3, r3, #30
 8001060:	d415      	bmi.n	800108e <_printf_i+0x212>
 8001062:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001064:	68e0      	ldr	r0, [r4, #12]
 8001066:	4298      	cmp	r0, r3
 8001068:	daaa      	bge.n	8000fc0 <_printf_i+0x144>
 800106a:	0018      	movs	r0, r3
 800106c:	e7a8      	b.n	8000fc0 <_printf_i+0x144>
 800106e:	0022      	movs	r2, r4
 8001070:	2301      	movs	r3, #1
 8001072:	9906      	ldr	r1, [sp, #24]
 8001074:	9805      	ldr	r0, [sp, #20]
 8001076:	9e07      	ldr	r6, [sp, #28]
 8001078:	3219      	adds	r2, #25
 800107a:	47b0      	blx	r6
 800107c:	3001      	adds	r0, #1
 800107e:	d09d      	beq.n	8000fbc <_printf_i+0x140>
 8001080:	3501      	adds	r5, #1
 8001082:	68e3      	ldr	r3, [r4, #12]
 8001084:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001086:	1a9b      	subs	r3, r3, r2
 8001088:	42ab      	cmp	r3, r5
 800108a:	dcf0      	bgt.n	800106e <_printf_i+0x1f2>
 800108c:	e7e9      	b.n	8001062 <_printf_i+0x1e6>
 800108e:	2500      	movs	r5, #0
 8001090:	e7f7      	b.n	8001082 <_printf_i+0x206>
 8001092:	46c0      	nop			; (mov r8, r8)
 8001094:	080014e2 	.word	0x080014e2
 8001098:	080014f3 	.word	0x080014f3

0800109c <__sflush_r>:
 800109c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800109e:	898b      	ldrh	r3, [r1, #12]
 80010a0:	0005      	movs	r5, r0
 80010a2:	000c      	movs	r4, r1
 80010a4:	071a      	lsls	r2, r3, #28
 80010a6:	d45c      	bmi.n	8001162 <__sflush_r+0xc6>
 80010a8:	684a      	ldr	r2, [r1, #4]
 80010aa:	2a00      	cmp	r2, #0
 80010ac:	dc04      	bgt.n	80010b8 <__sflush_r+0x1c>
 80010ae:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80010b0:	2a00      	cmp	r2, #0
 80010b2:	dc01      	bgt.n	80010b8 <__sflush_r+0x1c>
 80010b4:	2000      	movs	r0, #0
 80010b6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80010b8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80010ba:	2f00      	cmp	r7, #0
 80010bc:	d0fa      	beq.n	80010b4 <__sflush_r+0x18>
 80010be:	2200      	movs	r2, #0
 80010c0:	2080      	movs	r0, #128	; 0x80
 80010c2:	682e      	ldr	r6, [r5, #0]
 80010c4:	602a      	str	r2, [r5, #0]
 80010c6:	001a      	movs	r2, r3
 80010c8:	0140      	lsls	r0, r0, #5
 80010ca:	6a21      	ldr	r1, [r4, #32]
 80010cc:	4002      	ands	r2, r0
 80010ce:	4203      	tst	r3, r0
 80010d0:	d034      	beq.n	800113c <__sflush_r+0xa0>
 80010d2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010d4:	89a3      	ldrh	r3, [r4, #12]
 80010d6:	075b      	lsls	r3, r3, #29
 80010d8:	d506      	bpl.n	80010e8 <__sflush_r+0x4c>
 80010da:	6863      	ldr	r3, [r4, #4]
 80010dc:	1ac0      	subs	r0, r0, r3
 80010de:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80010e0:	2b00      	cmp	r3, #0
 80010e2:	d001      	beq.n	80010e8 <__sflush_r+0x4c>
 80010e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010e6:	1ac0      	subs	r0, r0, r3
 80010e8:	0002      	movs	r2, r0
 80010ea:	2300      	movs	r3, #0
 80010ec:	0028      	movs	r0, r5
 80010ee:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80010f0:	6a21      	ldr	r1, [r4, #32]
 80010f2:	47b8      	blx	r7
 80010f4:	89a2      	ldrh	r2, [r4, #12]
 80010f6:	1c43      	adds	r3, r0, #1
 80010f8:	d106      	bne.n	8001108 <__sflush_r+0x6c>
 80010fa:	6829      	ldr	r1, [r5, #0]
 80010fc:	291d      	cmp	r1, #29
 80010fe:	d82c      	bhi.n	800115a <__sflush_r+0xbe>
 8001100:	4b2a      	ldr	r3, [pc, #168]	; (80011ac <__sflush_r+0x110>)
 8001102:	410b      	asrs	r3, r1
 8001104:	07db      	lsls	r3, r3, #31
 8001106:	d428      	bmi.n	800115a <__sflush_r+0xbe>
 8001108:	2300      	movs	r3, #0
 800110a:	6063      	str	r3, [r4, #4]
 800110c:	6923      	ldr	r3, [r4, #16]
 800110e:	6023      	str	r3, [r4, #0]
 8001110:	04d2      	lsls	r2, r2, #19
 8001112:	d505      	bpl.n	8001120 <__sflush_r+0x84>
 8001114:	1c43      	adds	r3, r0, #1
 8001116:	d102      	bne.n	800111e <__sflush_r+0x82>
 8001118:	682b      	ldr	r3, [r5, #0]
 800111a:	2b00      	cmp	r3, #0
 800111c:	d100      	bne.n	8001120 <__sflush_r+0x84>
 800111e:	6560      	str	r0, [r4, #84]	; 0x54
 8001120:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001122:	602e      	str	r6, [r5, #0]
 8001124:	2900      	cmp	r1, #0
 8001126:	d0c5      	beq.n	80010b4 <__sflush_r+0x18>
 8001128:	0023      	movs	r3, r4
 800112a:	3344      	adds	r3, #68	; 0x44
 800112c:	4299      	cmp	r1, r3
 800112e:	d002      	beq.n	8001136 <__sflush_r+0x9a>
 8001130:	0028      	movs	r0, r5
 8001132:	f7ff fbf1 	bl	8000918 <_free_r>
 8001136:	2000      	movs	r0, #0
 8001138:	6360      	str	r0, [r4, #52]	; 0x34
 800113a:	e7bc      	b.n	80010b6 <__sflush_r+0x1a>
 800113c:	2301      	movs	r3, #1
 800113e:	0028      	movs	r0, r5
 8001140:	47b8      	blx	r7
 8001142:	1c43      	adds	r3, r0, #1
 8001144:	d1c6      	bne.n	80010d4 <__sflush_r+0x38>
 8001146:	682b      	ldr	r3, [r5, #0]
 8001148:	2b00      	cmp	r3, #0
 800114a:	d0c3      	beq.n	80010d4 <__sflush_r+0x38>
 800114c:	2b1d      	cmp	r3, #29
 800114e:	d001      	beq.n	8001154 <__sflush_r+0xb8>
 8001150:	2b16      	cmp	r3, #22
 8001152:	d101      	bne.n	8001158 <__sflush_r+0xbc>
 8001154:	602e      	str	r6, [r5, #0]
 8001156:	e7ad      	b.n	80010b4 <__sflush_r+0x18>
 8001158:	89a2      	ldrh	r2, [r4, #12]
 800115a:	2340      	movs	r3, #64	; 0x40
 800115c:	4313      	orrs	r3, r2
 800115e:	81a3      	strh	r3, [r4, #12]
 8001160:	e7a9      	b.n	80010b6 <__sflush_r+0x1a>
 8001162:	690e      	ldr	r6, [r1, #16]
 8001164:	2e00      	cmp	r6, #0
 8001166:	d0a5      	beq.n	80010b4 <__sflush_r+0x18>
 8001168:	680f      	ldr	r7, [r1, #0]
 800116a:	600e      	str	r6, [r1, #0]
 800116c:	1bba      	subs	r2, r7, r6
 800116e:	9201      	str	r2, [sp, #4]
 8001170:	2200      	movs	r2, #0
 8001172:	079b      	lsls	r3, r3, #30
 8001174:	d100      	bne.n	8001178 <__sflush_r+0xdc>
 8001176:	694a      	ldr	r2, [r1, #20]
 8001178:	60a2      	str	r2, [r4, #8]
 800117a:	9b01      	ldr	r3, [sp, #4]
 800117c:	2b00      	cmp	r3, #0
 800117e:	dd99      	ble.n	80010b4 <__sflush_r+0x18>
 8001180:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001182:	0032      	movs	r2, r6
 8001184:	001f      	movs	r7, r3
 8001186:	0028      	movs	r0, r5
 8001188:	9b01      	ldr	r3, [sp, #4]
 800118a:	6a21      	ldr	r1, [r4, #32]
 800118c:	47b8      	blx	r7
 800118e:	2800      	cmp	r0, #0
 8001190:	dc06      	bgt.n	80011a0 <__sflush_r+0x104>
 8001192:	2340      	movs	r3, #64	; 0x40
 8001194:	2001      	movs	r0, #1
 8001196:	89a2      	ldrh	r2, [r4, #12]
 8001198:	4240      	negs	r0, r0
 800119a:	4313      	orrs	r3, r2
 800119c:	81a3      	strh	r3, [r4, #12]
 800119e:	e78a      	b.n	80010b6 <__sflush_r+0x1a>
 80011a0:	9b01      	ldr	r3, [sp, #4]
 80011a2:	1836      	adds	r6, r6, r0
 80011a4:	1a1b      	subs	r3, r3, r0
 80011a6:	9301      	str	r3, [sp, #4]
 80011a8:	e7e7      	b.n	800117a <__sflush_r+0xde>
 80011aa:	46c0      	nop			; (mov r8, r8)
 80011ac:	dfbffffe 	.word	0xdfbffffe

080011b0 <_fflush_r>:
 80011b0:	690b      	ldr	r3, [r1, #16]
 80011b2:	b570      	push	{r4, r5, r6, lr}
 80011b4:	0005      	movs	r5, r0
 80011b6:	000c      	movs	r4, r1
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	d102      	bne.n	80011c2 <_fflush_r+0x12>
 80011bc:	2500      	movs	r5, #0
 80011be:	0028      	movs	r0, r5
 80011c0:	bd70      	pop	{r4, r5, r6, pc}
 80011c2:	2800      	cmp	r0, #0
 80011c4:	d004      	beq.n	80011d0 <_fflush_r+0x20>
 80011c6:	6a03      	ldr	r3, [r0, #32]
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d101      	bne.n	80011d0 <_fflush_r+0x20>
 80011cc:	f7ff fa90 	bl	80006f0 <__sinit>
 80011d0:	220c      	movs	r2, #12
 80011d2:	5ea3      	ldrsh	r3, [r4, r2]
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	d0f1      	beq.n	80011bc <_fflush_r+0xc>
 80011d8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80011da:	07d2      	lsls	r2, r2, #31
 80011dc:	d404      	bmi.n	80011e8 <_fflush_r+0x38>
 80011de:	059b      	lsls	r3, r3, #22
 80011e0:	d402      	bmi.n	80011e8 <_fflush_r+0x38>
 80011e2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011e4:	f7ff fb95 	bl	8000912 <__retarget_lock_acquire_recursive>
 80011e8:	0028      	movs	r0, r5
 80011ea:	0021      	movs	r1, r4
 80011ec:	f7ff ff56 	bl	800109c <__sflush_r>
 80011f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80011f2:	0005      	movs	r5, r0
 80011f4:	07db      	lsls	r3, r3, #31
 80011f6:	d4e2      	bmi.n	80011be <_fflush_r+0xe>
 80011f8:	89a3      	ldrh	r3, [r4, #12]
 80011fa:	059b      	lsls	r3, r3, #22
 80011fc:	d4df      	bmi.n	80011be <_fflush_r+0xe>
 80011fe:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001200:	f7ff fb88 	bl	8000914 <__retarget_lock_release_recursive>
 8001204:	e7db      	b.n	80011be <_fflush_r+0xe>

08001206 <__swbuf_r>:
 8001206:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001208:	0006      	movs	r6, r0
 800120a:	000d      	movs	r5, r1
 800120c:	0014      	movs	r4, r2
 800120e:	2800      	cmp	r0, #0
 8001210:	d004      	beq.n	800121c <__swbuf_r+0x16>
 8001212:	6a03      	ldr	r3, [r0, #32]
 8001214:	2b00      	cmp	r3, #0
 8001216:	d101      	bne.n	800121c <__swbuf_r+0x16>
 8001218:	f7ff fa6a 	bl	80006f0 <__sinit>
 800121c:	69a3      	ldr	r3, [r4, #24]
 800121e:	60a3      	str	r3, [r4, #8]
 8001220:	89a3      	ldrh	r3, [r4, #12]
 8001222:	071b      	lsls	r3, r3, #28
 8001224:	d528      	bpl.n	8001278 <__swbuf_r+0x72>
 8001226:	6923      	ldr	r3, [r4, #16]
 8001228:	2b00      	cmp	r3, #0
 800122a:	d025      	beq.n	8001278 <__swbuf_r+0x72>
 800122c:	6923      	ldr	r3, [r4, #16]
 800122e:	6820      	ldr	r0, [r4, #0]
 8001230:	b2ef      	uxtb	r7, r5
 8001232:	1ac0      	subs	r0, r0, r3
 8001234:	6963      	ldr	r3, [r4, #20]
 8001236:	b2ed      	uxtb	r5, r5
 8001238:	4283      	cmp	r3, r0
 800123a:	dc05      	bgt.n	8001248 <__swbuf_r+0x42>
 800123c:	0021      	movs	r1, r4
 800123e:	0030      	movs	r0, r6
 8001240:	f7ff ffb6 	bl	80011b0 <_fflush_r>
 8001244:	2800      	cmp	r0, #0
 8001246:	d11d      	bne.n	8001284 <__swbuf_r+0x7e>
 8001248:	68a3      	ldr	r3, [r4, #8]
 800124a:	3001      	adds	r0, #1
 800124c:	3b01      	subs	r3, #1
 800124e:	60a3      	str	r3, [r4, #8]
 8001250:	6823      	ldr	r3, [r4, #0]
 8001252:	1c5a      	adds	r2, r3, #1
 8001254:	6022      	str	r2, [r4, #0]
 8001256:	701f      	strb	r7, [r3, #0]
 8001258:	6963      	ldr	r3, [r4, #20]
 800125a:	4283      	cmp	r3, r0
 800125c:	d004      	beq.n	8001268 <__swbuf_r+0x62>
 800125e:	89a3      	ldrh	r3, [r4, #12]
 8001260:	07db      	lsls	r3, r3, #31
 8001262:	d507      	bpl.n	8001274 <__swbuf_r+0x6e>
 8001264:	2d0a      	cmp	r5, #10
 8001266:	d105      	bne.n	8001274 <__swbuf_r+0x6e>
 8001268:	0021      	movs	r1, r4
 800126a:	0030      	movs	r0, r6
 800126c:	f7ff ffa0 	bl	80011b0 <_fflush_r>
 8001270:	2800      	cmp	r0, #0
 8001272:	d107      	bne.n	8001284 <__swbuf_r+0x7e>
 8001274:	0028      	movs	r0, r5
 8001276:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001278:	0021      	movs	r1, r4
 800127a:	0030      	movs	r0, r6
 800127c:	f000 f806 	bl	800128c <__swsetup_r>
 8001280:	2800      	cmp	r0, #0
 8001282:	d0d3      	beq.n	800122c <__swbuf_r+0x26>
 8001284:	2501      	movs	r5, #1
 8001286:	426d      	negs	r5, r5
 8001288:	e7f4      	b.n	8001274 <__swbuf_r+0x6e>
	...

0800128c <__swsetup_r>:
 800128c:	4b30      	ldr	r3, [pc, #192]	; (8001350 <__swsetup_r+0xc4>)
 800128e:	b570      	push	{r4, r5, r6, lr}
 8001290:	0005      	movs	r5, r0
 8001292:	6818      	ldr	r0, [r3, #0]
 8001294:	000c      	movs	r4, r1
 8001296:	2800      	cmp	r0, #0
 8001298:	d004      	beq.n	80012a4 <__swsetup_r+0x18>
 800129a:	6a03      	ldr	r3, [r0, #32]
 800129c:	2b00      	cmp	r3, #0
 800129e:	d101      	bne.n	80012a4 <__swsetup_r+0x18>
 80012a0:	f7ff fa26 	bl	80006f0 <__sinit>
 80012a4:	230c      	movs	r3, #12
 80012a6:	5ee2      	ldrsh	r2, [r4, r3]
 80012a8:	b293      	uxth	r3, r2
 80012aa:	0711      	lsls	r1, r2, #28
 80012ac:	d423      	bmi.n	80012f6 <__swsetup_r+0x6a>
 80012ae:	06d9      	lsls	r1, r3, #27
 80012b0:	d407      	bmi.n	80012c2 <__swsetup_r+0x36>
 80012b2:	2309      	movs	r3, #9
 80012b4:	2001      	movs	r0, #1
 80012b6:	602b      	str	r3, [r5, #0]
 80012b8:	3337      	adds	r3, #55	; 0x37
 80012ba:	4313      	orrs	r3, r2
 80012bc:	81a3      	strh	r3, [r4, #12]
 80012be:	4240      	negs	r0, r0
 80012c0:	bd70      	pop	{r4, r5, r6, pc}
 80012c2:	075b      	lsls	r3, r3, #29
 80012c4:	d513      	bpl.n	80012ee <__swsetup_r+0x62>
 80012c6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012c8:	2900      	cmp	r1, #0
 80012ca:	d008      	beq.n	80012de <__swsetup_r+0x52>
 80012cc:	0023      	movs	r3, r4
 80012ce:	3344      	adds	r3, #68	; 0x44
 80012d0:	4299      	cmp	r1, r3
 80012d2:	d002      	beq.n	80012da <__swsetup_r+0x4e>
 80012d4:	0028      	movs	r0, r5
 80012d6:	f7ff fb1f 	bl	8000918 <_free_r>
 80012da:	2300      	movs	r3, #0
 80012dc:	6363      	str	r3, [r4, #52]	; 0x34
 80012de:	2224      	movs	r2, #36	; 0x24
 80012e0:	89a3      	ldrh	r3, [r4, #12]
 80012e2:	4393      	bics	r3, r2
 80012e4:	81a3      	strh	r3, [r4, #12]
 80012e6:	2300      	movs	r3, #0
 80012e8:	6063      	str	r3, [r4, #4]
 80012ea:	6923      	ldr	r3, [r4, #16]
 80012ec:	6023      	str	r3, [r4, #0]
 80012ee:	2308      	movs	r3, #8
 80012f0:	89a2      	ldrh	r2, [r4, #12]
 80012f2:	4313      	orrs	r3, r2
 80012f4:	81a3      	strh	r3, [r4, #12]
 80012f6:	6923      	ldr	r3, [r4, #16]
 80012f8:	2b00      	cmp	r3, #0
 80012fa:	d10b      	bne.n	8001314 <__swsetup_r+0x88>
 80012fc:	21a0      	movs	r1, #160	; 0xa0
 80012fe:	2280      	movs	r2, #128	; 0x80
 8001300:	89a3      	ldrh	r3, [r4, #12]
 8001302:	0089      	lsls	r1, r1, #2
 8001304:	0092      	lsls	r2, r2, #2
 8001306:	400b      	ands	r3, r1
 8001308:	4293      	cmp	r3, r2
 800130a:	d003      	beq.n	8001314 <__swsetup_r+0x88>
 800130c:	0021      	movs	r1, r4
 800130e:	0028      	movs	r0, r5
 8001310:	f000 f866 	bl	80013e0 <__smakebuf_r>
 8001314:	220c      	movs	r2, #12
 8001316:	5ea3      	ldrsh	r3, [r4, r2]
 8001318:	2001      	movs	r0, #1
 800131a:	001a      	movs	r2, r3
 800131c:	b299      	uxth	r1, r3
 800131e:	4002      	ands	r2, r0
 8001320:	4203      	tst	r3, r0
 8001322:	d00f      	beq.n	8001344 <__swsetup_r+0xb8>
 8001324:	2200      	movs	r2, #0
 8001326:	60a2      	str	r2, [r4, #8]
 8001328:	6962      	ldr	r2, [r4, #20]
 800132a:	4252      	negs	r2, r2
 800132c:	61a2      	str	r2, [r4, #24]
 800132e:	2000      	movs	r0, #0
 8001330:	6922      	ldr	r2, [r4, #16]
 8001332:	4282      	cmp	r2, r0
 8001334:	d1c4      	bne.n	80012c0 <__swsetup_r+0x34>
 8001336:	0609      	lsls	r1, r1, #24
 8001338:	d5c2      	bpl.n	80012c0 <__swsetup_r+0x34>
 800133a:	2240      	movs	r2, #64	; 0x40
 800133c:	4313      	orrs	r3, r2
 800133e:	81a3      	strh	r3, [r4, #12]
 8001340:	3801      	subs	r0, #1
 8001342:	e7bd      	b.n	80012c0 <__swsetup_r+0x34>
 8001344:	0788      	lsls	r0, r1, #30
 8001346:	d400      	bmi.n	800134a <__swsetup_r+0xbe>
 8001348:	6962      	ldr	r2, [r4, #20]
 800134a:	60a2      	str	r2, [r4, #8]
 800134c:	e7ef      	b.n	800132e <__swsetup_r+0xa2>
 800134e:	46c0      	nop			; (mov r8, r8)
 8001350:	20000058 	.word	0x20000058

08001354 <_sbrk_r>:
 8001354:	2300      	movs	r3, #0
 8001356:	b570      	push	{r4, r5, r6, lr}
 8001358:	4d06      	ldr	r5, [pc, #24]	; (8001374 <_sbrk_r+0x20>)
 800135a:	0004      	movs	r4, r0
 800135c:	0008      	movs	r0, r1
 800135e:	602b      	str	r3, [r5, #0]
 8001360:	f7ff f804 	bl	800036c <_sbrk>
 8001364:	1c43      	adds	r3, r0, #1
 8001366:	d103      	bne.n	8001370 <_sbrk_r+0x1c>
 8001368:	682b      	ldr	r3, [r5, #0]
 800136a:	2b00      	cmp	r3, #0
 800136c:	d000      	beq.n	8001370 <_sbrk_r+0x1c>
 800136e:	6023      	str	r3, [r4, #0]
 8001370:	bd70      	pop	{r4, r5, r6, pc}
 8001372:	46c0      	nop			; (mov r8, r8)
 8001374:	200001b8 	.word	0x200001b8

08001378 <memchr>:
 8001378:	b2c9      	uxtb	r1, r1
 800137a:	1882      	adds	r2, r0, r2
 800137c:	4290      	cmp	r0, r2
 800137e:	d101      	bne.n	8001384 <memchr+0xc>
 8001380:	2000      	movs	r0, #0
 8001382:	4770      	bx	lr
 8001384:	7803      	ldrb	r3, [r0, #0]
 8001386:	428b      	cmp	r3, r1
 8001388:	d0fb      	beq.n	8001382 <memchr+0xa>
 800138a:	3001      	adds	r0, #1
 800138c:	e7f6      	b.n	800137c <memchr+0x4>
	...

08001390 <__swhatbuf_r>:
 8001390:	b570      	push	{r4, r5, r6, lr}
 8001392:	000e      	movs	r6, r1
 8001394:	001d      	movs	r5, r3
 8001396:	230e      	movs	r3, #14
 8001398:	5ec9      	ldrsh	r1, [r1, r3]
 800139a:	0014      	movs	r4, r2
 800139c:	b096      	sub	sp, #88	; 0x58
 800139e:	2900      	cmp	r1, #0
 80013a0:	da0c      	bge.n	80013bc <__swhatbuf_r+0x2c>
 80013a2:	89b2      	ldrh	r2, [r6, #12]
 80013a4:	2380      	movs	r3, #128	; 0x80
 80013a6:	0011      	movs	r1, r2
 80013a8:	4019      	ands	r1, r3
 80013aa:	421a      	tst	r2, r3
 80013ac:	d013      	beq.n	80013d6 <__swhatbuf_r+0x46>
 80013ae:	2100      	movs	r1, #0
 80013b0:	3b40      	subs	r3, #64	; 0x40
 80013b2:	2000      	movs	r0, #0
 80013b4:	6029      	str	r1, [r5, #0]
 80013b6:	6023      	str	r3, [r4, #0]
 80013b8:	b016      	add	sp, #88	; 0x58
 80013ba:	bd70      	pop	{r4, r5, r6, pc}
 80013bc:	466a      	mov	r2, sp
 80013be:	f000 f84d 	bl	800145c <_fstat_r>
 80013c2:	2800      	cmp	r0, #0
 80013c4:	dbed      	blt.n	80013a2 <__swhatbuf_r+0x12>
 80013c6:	23f0      	movs	r3, #240	; 0xf0
 80013c8:	9901      	ldr	r1, [sp, #4]
 80013ca:	021b      	lsls	r3, r3, #8
 80013cc:	4019      	ands	r1, r3
 80013ce:	4b03      	ldr	r3, [pc, #12]	; (80013dc <__swhatbuf_r+0x4c>)
 80013d0:	18c9      	adds	r1, r1, r3
 80013d2:	424b      	negs	r3, r1
 80013d4:	4159      	adcs	r1, r3
 80013d6:	2380      	movs	r3, #128	; 0x80
 80013d8:	00db      	lsls	r3, r3, #3
 80013da:	e7ea      	b.n	80013b2 <__swhatbuf_r+0x22>
 80013dc:	ffffe000 	.word	0xffffe000

080013e0 <__smakebuf_r>:
 80013e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013e2:	2602      	movs	r6, #2
 80013e4:	898b      	ldrh	r3, [r1, #12]
 80013e6:	0005      	movs	r5, r0
 80013e8:	000c      	movs	r4, r1
 80013ea:	4233      	tst	r3, r6
 80013ec:	d006      	beq.n	80013fc <__smakebuf_r+0x1c>
 80013ee:	0023      	movs	r3, r4
 80013f0:	3347      	adds	r3, #71	; 0x47
 80013f2:	6023      	str	r3, [r4, #0]
 80013f4:	6123      	str	r3, [r4, #16]
 80013f6:	2301      	movs	r3, #1
 80013f8:	6163      	str	r3, [r4, #20]
 80013fa:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80013fc:	466a      	mov	r2, sp
 80013fe:	ab01      	add	r3, sp, #4
 8001400:	f7ff ffc6 	bl	8001390 <__swhatbuf_r>
 8001404:	9900      	ldr	r1, [sp, #0]
 8001406:	0007      	movs	r7, r0
 8001408:	0028      	movs	r0, r5
 800140a:	f7ff faf1 	bl	80009f0 <_malloc_r>
 800140e:	2800      	cmp	r0, #0
 8001410:	d108      	bne.n	8001424 <__smakebuf_r+0x44>
 8001412:	220c      	movs	r2, #12
 8001414:	5ea3      	ldrsh	r3, [r4, r2]
 8001416:	059a      	lsls	r2, r3, #22
 8001418:	d4ef      	bmi.n	80013fa <__smakebuf_r+0x1a>
 800141a:	2203      	movs	r2, #3
 800141c:	4393      	bics	r3, r2
 800141e:	431e      	orrs	r6, r3
 8001420:	81a6      	strh	r6, [r4, #12]
 8001422:	e7e4      	b.n	80013ee <__smakebuf_r+0xe>
 8001424:	2380      	movs	r3, #128	; 0x80
 8001426:	89a2      	ldrh	r2, [r4, #12]
 8001428:	6020      	str	r0, [r4, #0]
 800142a:	4313      	orrs	r3, r2
 800142c:	81a3      	strh	r3, [r4, #12]
 800142e:	9b00      	ldr	r3, [sp, #0]
 8001430:	6120      	str	r0, [r4, #16]
 8001432:	6163      	str	r3, [r4, #20]
 8001434:	9b01      	ldr	r3, [sp, #4]
 8001436:	2b00      	cmp	r3, #0
 8001438:	d00c      	beq.n	8001454 <__smakebuf_r+0x74>
 800143a:	0028      	movs	r0, r5
 800143c:	230e      	movs	r3, #14
 800143e:	5ee1      	ldrsh	r1, [r4, r3]
 8001440:	f000 f81e 	bl	8001480 <_isatty_r>
 8001444:	2800      	cmp	r0, #0
 8001446:	d005      	beq.n	8001454 <__smakebuf_r+0x74>
 8001448:	2303      	movs	r3, #3
 800144a:	89a2      	ldrh	r2, [r4, #12]
 800144c:	439a      	bics	r2, r3
 800144e:	3b02      	subs	r3, #2
 8001450:	4313      	orrs	r3, r2
 8001452:	81a3      	strh	r3, [r4, #12]
 8001454:	89a3      	ldrh	r3, [r4, #12]
 8001456:	433b      	orrs	r3, r7
 8001458:	81a3      	strh	r3, [r4, #12]
 800145a:	e7ce      	b.n	80013fa <__smakebuf_r+0x1a>

0800145c <_fstat_r>:
 800145c:	2300      	movs	r3, #0
 800145e:	b570      	push	{r4, r5, r6, lr}
 8001460:	4d06      	ldr	r5, [pc, #24]	; (800147c <_fstat_r+0x20>)
 8001462:	0004      	movs	r4, r0
 8001464:	0008      	movs	r0, r1
 8001466:	0011      	movs	r1, r2
 8001468:	602b      	str	r3, [r5, #0]
 800146a:	f7fe ff5c 	bl	8000326 <_fstat>
 800146e:	1c43      	adds	r3, r0, #1
 8001470:	d103      	bne.n	800147a <_fstat_r+0x1e>
 8001472:	682b      	ldr	r3, [r5, #0]
 8001474:	2b00      	cmp	r3, #0
 8001476:	d000      	beq.n	800147a <_fstat_r+0x1e>
 8001478:	6023      	str	r3, [r4, #0]
 800147a:	bd70      	pop	{r4, r5, r6, pc}
 800147c:	200001b8 	.word	0x200001b8

08001480 <_isatty_r>:
 8001480:	2300      	movs	r3, #0
 8001482:	b570      	push	{r4, r5, r6, lr}
 8001484:	4d06      	ldr	r5, [pc, #24]	; (80014a0 <_isatty_r+0x20>)
 8001486:	0004      	movs	r4, r0
 8001488:	0008      	movs	r0, r1
 800148a:	602b      	str	r3, [r5, #0]
 800148c:	f7fe ff59 	bl	8000342 <_isatty>
 8001490:	1c43      	adds	r3, r0, #1
 8001492:	d103      	bne.n	800149c <_isatty_r+0x1c>
 8001494:	682b      	ldr	r3, [r5, #0]
 8001496:	2b00      	cmp	r3, #0
 8001498:	d000      	beq.n	800149c <_isatty_r+0x1c>
 800149a:	6023      	str	r3, [r4, #0]
 800149c:	bd70      	pop	{r4, r5, r6, pc}
 800149e:	46c0      	nop			; (mov r8, r8)
 80014a0:	200001b8 	.word	0x200001b8

080014a4 <_init>:
 80014a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014a6:	46c0      	nop			; (mov r8, r8)
 80014a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014aa:	bc08      	pop	{r3}
 80014ac:	469e      	mov	lr, r3
 80014ae:	4770      	bx	lr

080014b0 <_fini>:
 80014b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b2:	46c0      	nop			; (mov r8, r8)
 80014b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014b6:	bc08      	pop	{r3}
 80014b8:	469e      	mov	lr, r3
 80014ba:	4770      	bx	lr
